@startuml Projekt: Monster Trading Card Game 

enum ElementType{
    Water
    Fire
    Normal
}

enum MonsterType{
    Goblin
    Dragon
    Wizzard 
    Ork 
    Knight
    Kraken
    Elf 
}

interface IUser{
    + string Username 
    + string Password
    + int Coins 
    + int Elo
    + int Wins
    + int Losses
    + Stack CardStack
    + Deck Deck
    + Register()
    + Login()
    + BuyPackage()
    + SelectCardForDeck()
    + OfferTrade()
    + AcceptTrade()
}

class User{
}
IUser <|-- User

interface ICard{

}

interface ISpell{

}
ISpell --|> ICard

interface IMonster{

}
IMonster --|> ICard

class Spell{
    - int Damage
    - ElementType Type
}
Spell --|> ISpell

class Monster{
    - int Damage
    - ElementType ElementType
    - MonsterType MonsterType
}
Monster --|> IMonster

class Stack{

}
User --> Stack : has

class Package{

}
User --> Package : buys

class Deck{

}
User --> Deck : uses

interface ICardCollection{
    + List<ICard> Cards
    + AddCard()
    + RemoveCard()
    + Print()
}
Stack --|> ICardCollection
Package --|> ICardCollection
Deck --|> ICardCollection
ICardCollection "1" --> "n" ICard : contains

class Store{

}
User --> Store : trades in

class Battle{
    - IUser User1
    - IUser User2

    + Battle(User1, User2)

}
Deck --> Battle : is used in

@enduml
