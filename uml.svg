<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="1448px" preserveAspectRatio="none" style="width:4221px;height:1448px;background:#FFFFFF;" version="1.1" viewBox="0 0 4221 1448" width="4221px" zoomAndPan="magnify"><script xmlns=""/><defs><filter height="300%" id="f1gfqg7viciu7t" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><text fill="#000000" font-family="sans-serif" font-size="18" lengthAdjust="spacing" textLength="262" x="1973" y="16.708">Monster Trading Card Game</text><!--MD5=[fe9bfd972914321ee85e78ae86b136d5]
class ElementType--><rect codeLine="4" fill="#FEFECE" filter="url(#f1gfqg7viciu7t)" height="124.8281" id="ElementType" style="stroke:#A80036;stroke-width:1.5;" width="110" x="1276.5" y="66.4531"/><ellipse cx="1291.5" cy="82.4531" fill="#EB937F" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1290.2969,83.3281 L1291.75,83.3281 L1291.75,83.4375 C1291.75,83.8438 1291.7813,84 1291.8594,84.1563 C1292.0156,84.4063 1292.2969,84.5625 1292.5938,84.5625 C1292.8438,84.5625 1293.1094,84.4219 1293.2656,84.2031 C1293.3906,84.0469 1293.4219,83.8906 1293.4219,83.4375 L1293.4219,81.5156 C1293.4219,81.3594 1293.4219,81.3125 1293.4063,81.1563 C1293.3438,80.6875 1293.0313,80.375 1292.5781,80.375 C1292.3281,80.375 1292.0625,80.5156 1291.8906,80.7344 C1291.7813,80.9063 1291.75,81.0625 1291.75,81.5156 L1291.75,81.6406 L1290.2969,81.6406 L1290.2969,79.2344 L1294.2813,79.2344 L1294.2813,80.0938 C1294.2813,80.5 1294.3125,80.6719 1294.3906,80.8281 C1294.5625,81.0781 1294.8438,81.2344 1295.125,81.2344 C1295.3906,81.2344 1295.6563,81.0938 1295.8281,80.875 C1295.9375,80.7031 1295.9688,80.5625 1295.9688,80.0938 L1295.9688,77.5469 L1288.3438,77.5469 C1287.9063,77.5469 1287.7813,77.5625 1287.625,77.6563 C1287.375,77.8125 1287.2188,78.1094 1287.2188,78.3906 C1287.2188,78.6719 1287.3594,78.9219 1287.5781,79.0938 C1287.7344,79.2031 1287.9219,79.2344 1288.3438,79.2344 L1288.5938,79.2344 L1288.5938,85.75 L1288.3438,85.75 C1287.9375,85.75 1287.7813,85.7656 1287.625,85.875 C1287.375,86.0469 1287.2188,86.3125 1287.2188,86.6094 C1287.2188,86.875 1287.3594,87.125 1287.5781,87.2813 C1287.7188,87.4063 1287.9531,87.4531 1288.3438,87.4531 L1296.3438,87.4531 L1296.3438,84.875 C1296.3438,84.4375 1296.3125,84.2969 1296.2344,84.1406 C1296.0625,83.8906 1295.7813,83.7344 1295.5,83.7344 C1295.2344,83.7344 1294.9688,83.8438 1294.7969,84.0938 C1294.6875,84.25 1294.6563,84.3906 1294.6563,84.875 L1294.6563,85.75 L1290.2969,85.75 L1290.2969,83.3281 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="78" x="1305.5" y="86.6074">ElementType</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1277.5" x2="1385.5" y1="98.4531" y2="98.4531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="34" x="1282.5" y="112.6636">Water</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="21" x="1282.5" y="125.4683">Fire</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="40" x="1282.5" y="138.2729">Normal</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="41" x="1282.5" y="151.0776">Electric</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="17" x="1282.5" y="163.8823">Ice</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="41" x="1282.5" y="176.687">Ground</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1277.5" x2="1385.5" y1="183.2813" y2="183.2813"/><!--MD5=[92d483e6afbca3485291354ffd034c32]
class MonsterType--><rect codeLine="13" fill="#FEFECE" filter="url(#f1gfqg7viciu7t)" height="137.6328" id="MonsterType" style="stroke:#A80036;stroke-width:1.5;" width="111" x="1422" y="59.9531"/><ellipse cx="1437" cy="75.9531" fill="#EB937F" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1435.7969,76.8281 L1437.25,76.8281 L1437.25,76.9375 C1437.25,77.3438 1437.2813,77.5 1437.3594,77.6563 C1437.5156,77.9063 1437.7969,78.0625 1438.0938,78.0625 C1438.3438,78.0625 1438.6094,77.9219 1438.7656,77.7031 C1438.8906,77.5469 1438.9219,77.3906 1438.9219,76.9375 L1438.9219,75.0156 C1438.9219,74.8594 1438.9219,74.8125 1438.9063,74.6563 C1438.8438,74.1875 1438.5313,73.875 1438.0781,73.875 C1437.8281,73.875 1437.5625,74.0156 1437.3906,74.2344 C1437.2813,74.4063 1437.25,74.5625 1437.25,75.0156 L1437.25,75.1406 L1435.7969,75.1406 L1435.7969,72.7344 L1439.7813,72.7344 L1439.7813,73.5938 C1439.7813,74 1439.8125,74.1719 1439.8906,74.3281 C1440.0625,74.5781 1440.3438,74.7344 1440.625,74.7344 C1440.8906,74.7344 1441.1563,74.5938 1441.3281,74.375 C1441.4375,74.2031 1441.4688,74.0625 1441.4688,73.5938 L1441.4688,71.0469 L1433.8438,71.0469 C1433.4063,71.0469 1433.2813,71.0625 1433.125,71.1563 C1432.875,71.3125 1432.7188,71.6094 1432.7188,71.8906 C1432.7188,72.1719 1432.8594,72.4219 1433.0781,72.5938 C1433.2344,72.7031 1433.4219,72.7344 1433.8438,72.7344 L1434.0938,72.7344 L1434.0938,79.25 L1433.8438,79.25 C1433.4375,79.25 1433.2813,79.2656 1433.125,79.375 C1432.875,79.5469 1432.7188,79.8125 1432.7188,80.1094 C1432.7188,80.375 1432.8594,80.625 1433.0781,80.7813 C1433.2188,80.9063 1433.4531,80.9531 1433.8438,80.9531 L1441.8438,80.9531 L1441.8438,78.375 C1441.8438,77.9375 1441.8125,77.7969 1441.7344,77.6406 C1441.5625,77.3906 1441.2813,77.2344 1441,77.2344 C1440.7344,77.2344 1440.4688,77.3438 1440.2969,77.5938 C1440.1875,77.75 1440.1563,77.8906 1440.1563,78.375 L1440.1563,79.25 L1435.7969,79.25 L1435.7969,76.8281 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="79" x="1451" y="80.1074">MonsterType</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1423" x2="1532" y1="91.9531" y2="91.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="36" x="1428" y="106.1636">Goblin</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="41" x="1428" y="118.9683">Dragon</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="46" x="1428" y="131.7729">Wizzard</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="19" x="1428" y="144.5776">Ork</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="35" x="1428" y="157.3823">Knight</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="39" x="1428" y="170.187">Kraken</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="14" x="1428" y="182.9917">Elf</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1423" x2="1532" y1="189.5859" y2="189.5859"/><!--MD5=[e773c09c2adbd57438d0a8cec2b52c13]
class PackageType--><rect codeLine="23" fill="#FEFECE" filter="url(#f1gfqg7viciu7t)" height="150.4375" id="PackageType" style="stroke:#A80036;stroke-width:1.5;" width="112" x="1568.5" y="53.9531"/><ellipse cx="1583.5" cy="69.9531" fill="#EB937F" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1582.2969,70.8281 L1583.75,70.8281 L1583.75,70.9375 C1583.75,71.3438 1583.7813,71.5 1583.8594,71.6563 C1584.0156,71.9063 1584.2969,72.0625 1584.5938,72.0625 C1584.8438,72.0625 1585.1094,71.9219 1585.2656,71.7031 C1585.3906,71.5469 1585.4219,71.3906 1585.4219,70.9375 L1585.4219,69.0156 C1585.4219,68.8594 1585.4219,68.8125 1585.4063,68.6563 C1585.3438,68.1875 1585.0313,67.875 1584.5781,67.875 C1584.3281,67.875 1584.0625,68.0156 1583.8906,68.2344 C1583.7813,68.4063 1583.75,68.5625 1583.75,69.0156 L1583.75,69.1406 L1582.2969,69.1406 L1582.2969,66.7344 L1586.2813,66.7344 L1586.2813,67.5938 C1586.2813,68 1586.3125,68.1719 1586.3906,68.3281 C1586.5625,68.5781 1586.8438,68.7344 1587.125,68.7344 C1587.3906,68.7344 1587.6563,68.5938 1587.8281,68.375 C1587.9375,68.2031 1587.9688,68.0625 1587.9688,67.5938 L1587.9688,65.0469 L1580.3438,65.0469 C1579.9063,65.0469 1579.7813,65.0625 1579.625,65.1563 C1579.375,65.3125 1579.2188,65.6094 1579.2188,65.8906 C1579.2188,66.1719 1579.3594,66.4219 1579.5781,66.5938 C1579.7344,66.7031 1579.9219,66.7344 1580.3438,66.7344 L1580.5938,66.7344 L1580.5938,73.25 L1580.3438,73.25 C1579.9375,73.25 1579.7813,73.2656 1579.625,73.375 C1579.375,73.5469 1579.2188,73.8125 1579.2188,74.1094 C1579.2188,74.375 1579.3594,74.625 1579.5781,74.7813 C1579.7188,74.9063 1579.9531,74.9531 1580.3438,74.9531 L1588.3438,74.9531 L1588.3438,72.375 C1588.3438,71.9375 1588.3125,71.7969 1588.2344,71.6406 C1588.0625,71.3906 1587.7813,71.2344 1587.5,71.2344 C1587.2344,71.2344 1586.9688,71.3438 1586.7969,71.5938 C1586.6875,71.75 1586.6563,71.8906 1586.6563,72.375 L1586.6563,73.25 L1582.2969,73.25 L1582.2969,70.8281 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="80" x="1597.5" y="74.1074">PackageType</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1569.5" x2="1679.5" y1="85.9531" y2="85.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="34" x="1574.5" y="100.1636">Water</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="21" x="1574.5" y="112.9683">Fire</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="40" x="1574.5" y="125.7729">Normal</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="41" x="1574.5" y="138.5776">Electric</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="17" x="1574.5" y="151.3823">Ice</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="41" x="1574.5" y="164.187">Ground</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="45" x="1574.5" y="176.9917">Monster</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="29" x="1574.5" y="189.7964">Spell</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1569.5" x2="1679.5" y1="196.3906" y2="196.3906"/><!--MD5=[521817ab83e81da341a3f4b5e91bae41]
class Command--><rect codeLine="34" fill="#FEFECE" filter="url(#f1gfqg7viciu7t)" height="188.8516" id="Command" style="stroke:#A80036;stroke-width:1.5;" width="92" x="1285.5" y="434.9531"/><ellipse cx="1300.5" cy="450.9531" fill="#EB937F" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1299.2969,451.8281 L1300.75,451.8281 L1300.75,451.9375 C1300.75,452.3438 1300.7813,452.5 1300.8594,452.6563 C1301.0156,452.9063 1301.2969,453.0625 1301.5938,453.0625 C1301.8438,453.0625 1302.1094,452.9219 1302.2656,452.7031 C1302.3906,452.5469 1302.4219,452.3906 1302.4219,451.9375 L1302.4219,450.0156 C1302.4219,449.8594 1302.4219,449.8125 1302.4063,449.6563 C1302.3438,449.1875 1302.0313,448.875 1301.5781,448.875 C1301.3281,448.875 1301.0625,449.0156 1300.8906,449.2344 C1300.7813,449.4063 1300.75,449.5625 1300.75,450.0156 L1300.75,450.1406 L1299.2969,450.1406 L1299.2969,447.7344 L1303.2813,447.7344 L1303.2813,448.5938 C1303.2813,449 1303.3125,449.1719 1303.3906,449.3281 C1303.5625,449.5781 1303.8438,449.7344 1304.125,449.7344 C1304.3906,449.7344 1304.6563,449.5938 1304.8281,449.375 C1304.9375,449.2031 1304.9688,449.0625 1304.9688,448.5938 L1304.9688,446.0469 L1297.3438,446.0469 C1296.9063,446.0469 1296.7813,446.0625 1296.625,446.1563 C1296.375,446.3125 1296.2188,446.6094 1296.2188,446.8906 C1296.2188,447.1719 1296.3594,447.4219 1296.5781,447.5938 C1296.7344,447.7031 1296.9219,447.7344 1297.3438,447.7344 L1297.5938,447.7344 L1297.5938,454.25 L1297.3438,454.25 C1296.9375,454.25 1296.7813,454.2656 1296.625,454.375 C1296.375,454.5469 1296.2188,454.8125 1296.2188,455.1094 C1296.2188,455.375 1296.3594,455.625 1296.5781,455.7813 C1296.7188,455.9063 1296.9531,455.9531 1297.3438,455.9531 L1305.3438,455.9531 L1305.3438,453.375 C1305.3438,452.9375 1305.3125,452.7969 1305.2344,452.6406 C1305.0625,452.3906 1304.7813,452.2344 1304.5,452.2344 C1304.2344,452.2344 1303.9688,452.3438 1303.7969,452.5938 C1303.6875,452.75 1303.6563,452.8906 1303.6563,453.375 L1303.6563,454.25 L1299.2969,454.25 L1299.2969,451.8281 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="60" x="1314.5" y="455.1074">Command</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1286.5" x2="1376.5" y1="466.9531" y2="466.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="23" x="1291.5" y="481.1636">Quit</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="47" x="1291.5" y="493.9683">Register</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="30" x="1291.5" y="506.7729">Login</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="38" x="1291.5" y="519.5776">Logout</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="29" x="1291.5" y="532.3823">Deck</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="34" x="1291.5" y="545.187">Battle</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="22" x="1291.5" y="557.9917">Buy</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="33" x="1291.5" y="570.7964">Trade</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="39" x="1291.5" y="583.6011">Scores</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="35" x="1291.5" y="596.4058">Profile</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="37" x="1291.5" y="609.2104">Invalid</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1286.5" x2="1376.5" y1="615.8047" y2="615.8047"/><!--MD5=[3124add794188d75953438ffc4835d72]
class CLI--><rect codeLine="48" fill="#FEFECE" filter="url(#f1gfqg7viciu7t)" height="214.4609" id="CLI" style="stroke:#A80036;stroke-width:1.5;" width="204" x="1412.5" y="422.4531"/><ellipse cx="1501.75" cy="438.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1504.0938,434.125 C1503.1563,433.6875 1502.5625,433.5469 1501.6875,433.5469 C1499.0625,433.5469 1497.0625,435.625 1497.0625,438.3438 L1497.0625,439.4688 C1497.0625,442.0469 1499.1719,443.9375 1502.0625,443.9375 C1503.2813,443.9375 1504.4375,443.6406 1505.1875,443.0938 C1505.7656,442.6875 1506.0938,442.2344 1506.0938,441.8438 C1506.0938,441.3906 1505.7031,441 1505.2344,441 C1505.0156,441 1504.8125,441.0781 1504.625,441.2656 C1504.1719,441.75 1504.1719,441.75 1503.9844,441.8438 C1503.5625,442.1094 1502.875,442.2344 1502.1094,442.2344 C1500.0625,442.2344 1498.7656,441.1406 1498.7656,439.4375 L1498.7656,438.3438 C1498.7656,436.5625 1500.0156,435.25 1501.75,435.25 C1502.3281,435.25 1502.9375,435.4063 1503.4063,435.6563 C1503.8906,435.9375 1504.0625,436.1563 1504.1563,436.5625 C1504.2188,436.9688 1504.25,437.0938 1504.3906,437.2188 C1504.5313,437.3594 1504.7656,437.4688 1504.9844,437.4688 C1505.25,437.4688 1505.5156,437.3281 1505.6875,437.1094 C1505.7969,436.9531 1505.8281,436.7656 1505.8281,436.3438 L1505.8281,434.9219 C1505.8281,434.4844 1505.8125,434.3594 1505.7188,434.2031 C1505.5625,433.9375 1505.2813,433.7969 1504.9844,433.7969 C1504.6875,433.7969 1504.4844,433.8906 1504.2656,434.2031 L1504.0938,434.125 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="17" x="1522.25" y="442.6074">CLI</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1413.5" x2="1615.5" y1="454.4531" y2="454.4531"/><ellipse cx="1423.5" cy="465.4531" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="89" x="1432.5" y="468.6636">bool IsLoggedIn</text><ellipse cx="1423.5" cy="478.2578" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="111" x="1432.5" y="481.4683">IUser LoggedInUser</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1413.5" x2="1615.5" y1="488.0625" y2="488.0625"/><ellipse cx="1423.5" cy="499.0625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="28" x="1432.5" y="502.2729">CLI();</text><ellipse cx="1423.5" cy="511.8672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="178" x="1432.5" y="515.0776">Command GetUserCommand();</text><ellipse cx="1423.5" cy="524.6719" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="127" x="1432.5" y="527.8823">string ReadPassword();</text><ellipse cx="1423.5" cy="537.4766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="112" x="1432.5" y="540.687">bool RegisterUser();</text><ellipse cx="1423.5" cy="550.2813" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="95" x="1432.5" y="553.4917">bool LoginUser();</text><ellipse cx="1423.5" cy="563.0859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="103" x="1432.5" y="566.2964">void LogoutUser();</text><ellipse cx="1423.5" cy="575.8906" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="73" x="1432.5" y="579.1011">void Battle();</text><ellipse cx="1423.5" cy="588.6953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="74" x="1432.5" y="591.9058">void Profile();</text><ellipse cx="1423.5" cy="601.5" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="107" x="1432.5" y="604.7104">void GetPackage();</text><ellipse cx="1423.5" cy="614.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="78" x="1432.5" y="617.5151">void Scores();</text><ellipse cx="1423.5" cy="627.1094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="72" x="1432.5" y="630.3198">void Trade();</text><!--MD5=[4397ba3f25468a58f081bf0666d83f60]
class IUser--><rect codeLine="64" fill="#FEFECE" filter="url(#f1gfqg7viciu7t)" height="48" id="IUser" style="stroke:#A80036;stroke-width:1.5;" width="63" x="1867" y="104.9531"/><ellipse cx="1882" cy="120.9531" fill="#B4A7E5" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1882.9531,117.7344 L1884.6719,117.7344 C1885.0625,117.7344 1885.25,117.7031 1885.375,117.625 C1885.6406,117.4688 1885.7813,117.1875 1885.7813,116.8906 C1885.7813,116.625 1885.6719,116.3594 1885.4375,116.1875 C1885.2656,116.0781 1885.125,116.0469 1884.6719,116.0469 L1879.5313,116.0469 C1879.0938,116.0469 1878.9688,116.0625 1878.8125,116.1563 C1878.5625,116.3125 1878.4063,116.6094 1878.4063,116.8906 C1878.4063,117.1719 1878.5469,117.4219 1878.7656,117.5938 C1878.9219,117.7031 1879.1094,117.7344 1879.5313,117.7344 L1881.25,117.7344 L1881.25,124.25 L1879.5313,124.25 C1879.0938,124.25 1878.9688,124.2656 1878.8125,124.375 C1878.5625,124.5313 1878.4063,124.8125 1878.4063,125.1094 C1878.4063,125.3594 1878.5469,125.625 1878.7656,125.7813 C1878.9219,125.9063 1879.125,125.9531 1879.5313,125.9531 L1884.6719,125.9531 C1885.4219,125.9531 1885.7813,125.6719 1885.7813,125.1094 C1885.7813,124.8281 1885.6719,124.5781 1885.4375,124.4063 C1885.2656,124.2813 1885.125,124.25 1884.6719,124.25 L1882.9531,124.25 L1882.9531,117.7344 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="31" x="1896" y="125.1074">IUser</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1868" x2="1929" y1="136.9531" y2="136.9531"/><line style="stroke:#A80036;stroke-width:1.5;" x1="1868" x2="1929" y1="144.9531" y2="144.9531"/><!--MD5=[3fd616f346a44cd59a91eb10b19e157c]
class User--><rect codeLine="67" fill="#FEFECE" filter="url(#f1gfqg7viciu7t)" height="444.9453" id="User" style="stroke:#A80036;stroke-width:1.5;" width="494" x="1651.5" y="306.9531"/><ellipse cx="1879.75" cy="322.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1882.0938,318.625 C1881.1563,318.1875 1880.5625,318.0469 1879.6875,318.0469 C1877.0625,318.0469 1875.0625,320.125 1875.0625,322.8438 L1875.0625,323.9688 C1875.0625,326.5469 1877.1719,328.4375 1880.0625,328.4375 C1881.2813,328.4375 1882.4375,328.1406 1883.1875,327.5938 C1883.7656,327.1875 1884.0938,326.7344 1884.0938,326.3438 C1884.0938,325.8906 1883.7031,325.5 1883.2344,325.5 C1883.0156,325.5 1882.8125,325.5781 1882.625,325.7656 C1882.1719,326.25 1882.1719,326.25 1881.9844,326.3438 C1881.5625,326.6094 1880.875,326.7344 1880.1094,326.7344 C1878.0625,326.7344 1876.7656,325.6406 1876.7656,323.9375 L1876.7656,322.8438 C1876.7656,321.0625 1878.0156,319.75 1879.75,319.75 C1880.3281,319.75 1880.9375,319.9063 1881.4063,320.1563 C1881.8906,320.4375 1882.0625,320.6563 1882.1563,321.0625 C1882.2188,321.4688 1882.25,321.5938 1882.3906,321.7188 C1882.5313,321.8594 1882.7656,321.9688 1882.9844,321.9688 C1883.25,321.9688 1883.5156,321.8281 1883.6875,321.6094 C1883.7969,321.4531 1883.8281,321.2656 1883.8281,320.8438 L1883.8281,319.4219 C1883.8281,318.9844 1883.8125,318.8594 1883.7188,318.7031 C1883.5625,318.4375 1883.2813,318.2969 1882.9844,318.2969 C1882.6875,318.2969 1882.4844,318.3906 1882.2656,318.7031 L1882.0938,318.625 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="29" x="1900.25" y="327.1074">User</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1652.5" x2="2144.5" y1="338.9531" y2="338.9531"/><ellipse cx="1662.5" cy="349.9531" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="28" x="1671.5" y="353.1636">int Id</text><ellipse cx="1662.5" cy="362.7578" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="94" x="1671.5" y="365.9683">string Username</text><ellipse cx="1662.5" cy="375.5625" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="87" x="1671.5" y="378.7729">string Password</text><ellipse cx="1662.5" cy="388.3672" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="49" x="1671.5" y="391.5776">int Coins</text><ellipse cx="1662.5" cy="401.1719" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="35" x="1671.5" y="404.3823">int Elo</text><ellipse cx="1662.5" cy="413.9766" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="45" x="1671.5" y="417.187">int Wins</text><ellipse cx="1662.5" cy="426.7813" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="57" x="1671.5" y="429.9917">int Losses</text><ellipse cx="1662.5" cy="439.5859" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="118" x="1671.5" y="442.7964">CardStack CardStack</text><ellipse cx="1662.5" cy="452.3906" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="62" x="1671.5" y="455.6011">Deck Deck</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1652.5" x2="2144.5" y1="462.1953" y2="462.1953"/><ellipse cx="1662.5" cy="473.1953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="184" x="1671.5" y="476.4058">void Challenge(IUser opponent);</text><ellipse cx="1662.5" cy="486" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="96" x="1671.5" y="489.2104">void BuildDeck();</text><ellipse cx="1662.5" cy="498.8047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="159" x="1671.5" y="502.0151">ICard ChooseRandomCard();</text><ellipse cx="1662.5" cy="511.6094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="189" x="1671.5" y="514.8198">void AddCardToStack(ICard card);</text><ellipse cx="1662.5" cy="524.4141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="187" x="1671.5" y="527.6245">void AddCardToDeck(ICard card);</text><ellipse cx="1662.5" cy="537.2188" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="227" x="1671.5" y="540.4292">void RemoveCardFromDeck(ICard card);</text><ellipse cx="1662.5" cy="550.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="95" x="1671.5" y="553.2339">void WinGame();</text><ellipse cx="1662.5" cy="562.8281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="101" x="1671.5" y="566.0386">void LoseGame();</text><ellipse cx="1662.5" cy="575.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="63" x="1671.5" y="578.8433">void Print();</text><ellipse cx="1662.5" cy="588.4375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="207" x="1671.5" y="591.6479">void BuyPackage(Package package);</text><ellipse cx="1662.5" cy="601.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="94" x="1671.5" y="604.4526">void OfferCard();</text><ellipse cx="1662.5" cy="614.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="144" x="1671.5" y="617.2573">void ManageOwnOffers();</text><ellipse cx="1662.5" cy="626.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="129" x="1671.5" y="630.062">void FindOtherOffers();</text><ellipse cx="1662.5" cy="639.6563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="141" x="1671.5" y="642.8667">void ShowTransactions();</text><ellipse cx="1662.5" cy="652.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="150" x="1671.5" y="655.6714">void SendBattleRequest();</text><ellipse cx="1662.5" cy="665.2656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="166" x="1671.5" y="668.4761">bool HandleBattleRequests();</text><ellipse cx="1662.5" cy="678.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="225" x="1671.5" y="681.2808">User(string username, string password);</text><ellipse cx="1662.5" cy="690.875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="468" x="1671.5" y="694.0854">User(int id, string username, string password, int coins, int elo, int wins, int losses);</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1659.5" y="700.6797"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="215" x="1671.5" y="706.8901">Tuple&lt;int, int, int&gt; GetCardRequest();</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1659.5" y="713.4844"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="106" x="1671.5" y="719.6948">int GetOfferPrice();</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1659.5" y="726.2891"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="186" x="1671.5" y="732.4995">List&lt;Offer&gt; ListOffers(bool own);</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1659.5" y="739.0938"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="213" x="1671.5" y="745.3042">Offer SelectOffer(List&lt;Offer&gt; offers);</text><!--MD5=[b3d1b7ce0b9aeb447f10a862a70f6cde]
class ICard--><rect codeLine="102" fill="#FEFECE" filter="url(#f1gfqg7viciu7t)" height="48" id="ICard" style="stroke:#A80036;stroke-width:1.5;" width="64" x="1246.5" y="1386.9531"/><ellipse cx="1261.5" cy="1402.9531" fill="#B4A7E5" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1262.4531,1399.7344 L1264.1719,1399.7344 C1264.5625,1399.7344 1264.75,1399.7031 1264.875,1399.625 C1265.1406,1399.4688 1265.2813,1399.1875 1265.2813,1398.8906 C1265.2813,1398.625 1265.1719,1398.3594 1264.9375,1398.1875 C1264.7656,1398.0781 1264.625,1398.0469 1264.1719,1398.0469 L1259.0313,1398.0469 C1258.5938,1398.0469 1258.4688,1398.0625 1258.3125,1398.1563 C1258.0625,1398.3125 1257.9063,1398.6094 1257.9063,1398.8906 C1257.9063,1399.1719 1258.0469,1399.4219 1258.2656,1399.5938 C1258.4219,1399.7031 1258.6094,1399.7344 1259.0313,1399.7344 L1260.75,1399.7344 L1260.75,1406.25 L1259.0313,1406.25 C1258.5938,1406.25 1258.4688,1406.2656 1258.3125,1406.375 C1258.0625,1406.5313 1257.9063,1406.8125 1257.9063,1407.1094 C1257.9063,1407.3594 1258.0469,1407.625 1258.2656,1407.7813 C1258.4219,1407.9063 1258.625,1407.9531 1259.0313,1407.9531 L1264.1719,1407.9531 C1264.9219,1407.9531 1265.2813,1407.6719 1265.2813,1407.1094 C1265.2813,1406.8281 1265.1719,1406.5781 1264.9375,1406.4063 C1264.7656,1406.2813 1264.625,1406.25 1264.1719,1406.25 L1262.4531,1406.25 L1262.4531,1399.7344 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="32" x="1275.5" y="1407.1074">ICard</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1247.5" x2="1309.5" y1="1418.9531" y2="1418.9531"/><line style="stroke:#A80036;stroke-width:1.5;" x1="1247.5" x2="1309.5" y1="1426.9531" y2="1426.9531"/><!--MD5=[5e305716458bbdabbd2d7f572ed2bae2]
class Card--><rect codeLine="105" fill="#FEFECE" filter="url(#f1gfqg7viciu7t)" height="150.4375" id="Card" style="stroke:#A80036;stroke-width:1.5;" width="184" x="707.5" y="1133.9531"/><ellipse cx="781.25" cy="1149.9531" fill="#A9DCDF" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M783.3281,1151.7656 L783.7188,1152.75 L783.3281,1152.75 C782.875,1152.75 782.7656,1152.7656 782.6094,1152.875 C782.3594,1153.0313 782.2031,1153.3125 782.2031,1153.6094 C782.2031,1153.875 782.3438,1154.125 782.5625,1154.2813 C782.7031,1154.4063 782.9063,1154.4531 783.3281,1154.4531 L785.6875,1154.4531 C786.0469,1154.4531 786.2656,1154.4219 786.4063,1154.3281 C786.6563,1154.1875 786.8125,1153.8906 786.8125,1153.6094 C786.8125,1153.3281 786.6719,1153.0781 786.4531,1152.9219 C786.2813,1152.7813 786.125,1152.75 785.6563,1152.75 L782.2656,1144.5469 L778.5938,1144.5469 C778.1406,1144.5469 778.0156,1144.5625 777.8594,1144.6563 C777.6094,1144.8281 777.4531,1145.1094 777.4531,1145.3906 C777.4531,1145.6719 777.5938,1145.9219 777.8125,1146.0938 C777.9844,1146.2031 778.1563,1146.2344 778.5938,1146.2344 L779.6719,1146.2344 L777.0313,1152.75 C776.6094,1152.75 776.4531,1152.7656 776.2969,1152.875 C776.0469,1153.0313 775.8906,1153.3125 775.8906,1153.6094 C775.8906,1154.1719 776.2656,1154.4531 777.0156,1154.4531 L779.2813,1154.4531 C779.6406,1154.4531 779.8594,1154.4219 779.9844,1154.3281 C780.25,1154.1875 780.3906,1153.8906 780.3906,1153.6094 C780.3906,1153.3281 780.2656,1153.0781 780.0469,1152.9063 C779.875,1152.7813 779.7344,1152.75 779.2813,1152.75 L778.8906,1152.75 L779.2813,1151.7656 L783.3281,1151.7656 Z M782.625,1150.0625 L779.9531,1150.0625 L781.2969,1146.7969 L782.625,1150.0625 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="28" x="801.75" y="1154.1074">Card</text><line style="stroke:#A80036;stroke-width:1.5;" x1="708.5" x2="890.5" y1="1165.9531" y2="1165.9531"/><ellipse cx="718.5" cy="1176.9531" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="28" x="727.5" y="1180.1636">int Id</text><ellipse cx="718.5" cy="1189.7578" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="67" x="727.5" y="1192.9683">int Damage</text><ellipse cx="718.5" cy="1202.5625" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="69" x="727.5" y="1205.7729">string Name</text><ellipse cx="718.5" cy="1215.3672" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="727.5" y="1218.5776">ElementType ElementType</text><ellipse cx="718.5" cy="1228.1719" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="152" x="727.5" y="1231.3823">MonsterType MonsterType</text><ellipse cx="718.5" cy="1240.9766" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="50" x="727.5" y="1244.187">int Level</text><ellipse cx="718.5" cy="1253.7813" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="83" x="727.5" y="1256.9917">int Experience</text><line style="stroke:#A80036;stroke-width:1.5;" x1="708.5" x2="890.5" y1="1263.5859" y2="1263.5859"/><ellipse cx="718.5" cy="1274.5859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="126" x="727.5" y="1277.7964">void LevelUp(int exp);</text><!--MD5=[2852b5923301941ca5ddb940c0bde7e0]
class Spell--><rect codeLine="117" fill="#FEFECE" filter="url(#f1gfqg7viciu7t)" height="124.8281" id="Spell" style="stroke:#A80036;stroke-width:1.5;" width="453" x="7" y="867.4531"/><ellipse cx="214.25" cy="883.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M216.5938,879.125 C215.6563,878.6875 215.0625,878.5469 214.1875,878.5469 C211.5625,878.5469 209.5625,880.625 209.5625,883.3438 L209.5625,884.4688 C209.5625,887.0469 211.6719,888.9375 214.5625,888.9375 C215.7813,888.9375 216.9375,888.6406 217.6875,888.0938 C218.2656,887.6875 218.5938,887.2344 218.5938,886.8438 C218.5938,886.3906 218.2031,886 217.7344,886 C217.5156,886 217.3125,886.0781 217.125,886.2656 C216.6719,886.75 216.6719,886.75 216.4844,886.8438 C216.0625,887.1094 215.375,887.2344 214.6094,887.2344 C212.5625,887.2344 211.2656,886.1406 211.2656,884.4375 L211.2656,883.3438 C211.2656,881.5625 212.5156,880.25 214.25,880.25 C214.8281,880.25 215.4375,880.4063 215.9063,880.6563 C216.3906,880.9375 216.5625,881.1563 216.6563,881.5625 C216.7188,881.9688 216.75,882.0938 216.8906,882.2188 C217.0313,882.3594 217.2656,882.4688 217.4844,882.4688 C217.75,882.4688 218.0156,882.3281 218.1875,882.1094 C218.2969,881.9531 218.3281,881.7656 218.3281,881.3438 L218.3281,879.9219 C218.3281,879.4844 218.3125,879.3594 218.2188,879.2031 C218.0625,878.9375 217.7813,878.7969 217.4844,878.7969 C217.1875,878.7969 216.9844,878.8906 216.7656,879.2031 L216.5938,879.125 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="30" x="234.75" y="887.6074">Spell</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="459" y1="899.4531" y2="899.4531"/><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="459" y1="907.4531" y2="907.4531"/><ellipse cx="18" cy="918.4531" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="427" x="27" y="921.6636">Spell(int id, string name, int damage, ElementType type, int level, int exp)</text><ellipse cx="18" cy="931.2578" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="326" x="27" y="934.4683">Spell(int id, string name, int damage, ElementType type)</text><ellipse cx="18" cy="944.0625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="165" x="27" y="947.2729">void PrintCardNameInTable();</text><ellipse cx="18" cy="956.8672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="123" x="27" y="960.0776">void PrintCardName();</text><ellipse cx="18" cy="969.6719" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="137" x="27" y="972.8823">void PrintWithDamage();</text><ellipse cx="18" cy="982.4766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="202" x="27" y="985.687">void PrintWithDamage(int damage);</text><!--MD5=[d2c4278637bdc93ab6ebd71329cfa63c]
class Monster--><rect codeLine="127" fill="#FEFECE" filter="url(#f1gfqg7viciu7t)" height="124.8281" id="Monster" style="stroke:#A80036;stroke-width:1.5;" width="608" x="495.5" y="867.4531"/><ellipse cx="770.75" cy="883.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M773.0938,879.125 C772.1563,878.6875 771.5625,878.5469 770.6875,878.5469 C768.0625,878.5469 766.0625,880.625 766.0625,883.3438 L766.0625,884.4688 C766.0625,887.0469 768.1719,888.9375 771.0625,888.9375 C772.2813,888.9375 773.4375,888.6406 774.1875,888.0938 C774.7656,887.6875 775.0938,887.2344 775.0938,886.8438 C775.0938,886.3906 774.7031,886 774.2344,886 C774.0156,886 773.8125,886.0781 773.625,886.2656 C773.1719,886.75 773.1719,886.75 772.9844,886.8438 C772.5625,887.1094 771.875,887.2344 771.1094,887.2344 C769.0625,887.2344 767.7656,886.1406 767.7656,884.4375 L767.7656,883.3438 C767.7656,881.5625 769.0156,880.25 770.75,880.25 C771.3281,880.25 771.9375,880.4063 772.4063,880.6563 C772.8906,880.9375 773.0625,881.1563 773.1563,881.5625 C773.2188,881.9688 773.25,882.0938 773.3906,882.2188 C773.5313,882.3594 773.7656,882.4688 773.9844,882.4688 C774.25,882.4688 774.5156,882.3281 774.6875,882.1094 C774.7969,881.9531 774.8281,881.7656 774.8281,881.3438 L774.8281,879.9219 C774.8281,879.4844 774.8125,879.3594 774.7188,879.2031 C774.5625,878.9375 774.2813,878.7969 773.9844,878.7969 C773.6875,878.7969 773.4844,878.8906 773.2656,879.2031 L773.0938,879.125 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="49" x="791.25" y="887.6074">Monster</text><line style="stroke:#A80036;stroke-width:1.5;" x1="496.5" x2="1102.5" y1="899.4531" y2="899.4531"/><line style="stroke:#A80036;stroke-width:1.5;" x1="496.5" x2="1102.5" y1="907.4531" y2="907.4531"/><ellipse cx="506.5" cy="918.4531" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="582" x="515.5" y="921.6636">Monster(int id, string name, int damage, ElementType eType, MonsterType mType, int level, int exp);</text><ellipse cx="506.5" cy="931.2578" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="481" x="515.5" y="934.4683">Monster(int id, string name, int damage, ElementType eType, MonsterType mType);</text><ellipse cx="506.5" cy="944.0625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="165" x="515.5" y="947.2729">void PrintCardNameInTable();</text><ellipse cx="506.5" cy="956.8672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="123" x="515.5" y="960.0776">void PrintCardName();</text><ellipse cx="506.5" cy="969.6719" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="137" x="515.5" y="972.8823">void PrintWithDamage();</text><ellipse cx="506.5" cy="982.4766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="202" x="515.5" y="985.687">void PrintWithDamage(int damage);</text><!--MD5=[1a47157467d69c83c0a10e9152875283]
class Stack--><rect codeLine="137" fill="#FEFECE" filter="url(#f1gfqg7viciu7t)" height="201.6563" id="Stack" style="stroke:#A80036;stroke-width:1.5;" width="299" x="1428" y="828.9531"/><ellipse cx="1556.75" cy="844.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1559.0938,840.625 C1558.1563,840.1875 1557.5625,840.0469 1556.6875,840.0469 C1554.0625,840.0469 1552.0625,842.125 1552.0625,844.8438 L1552.0625,845.9688 C1552.0625,848.5469 1554.1719,850.4375 1557.0625,850.4375 C1558.2813,850.4375 1559.4375,850.1406 1560.1875,849.5938 C1560.7656,849.1875 1561.0938,848.7344 1561.0938,848.3438 C1561.0938,847.8906 1560.7031,847.5 1560.2344,847.5 C1560.0156,847.5 1559.8125,847.5781 1559.625,847.7656 C1559.1719,848.25 1559.1719,848.25 1558.9844,848.3438 C1558.5625,848.6094 1557.875,848.7344 1557.1094,848.7344 C1555.0625,848.7344 1553.7656,847.6406 1553.7656,845.9375 L1553.7656,844.8438 C1553.7656,843.0625 1555.0156,841.75 1556.75,841.75 C1557.3281,841.75 1557.9375,841.9063 1558.4063,842.1563 C1558.8906,842.4375 1559.0625,842.6563 1559.1563,843.0625 C1559.2188,843.4688 1559.25,843.5938 1559.3906,843.7188 C1559.5313,843.8594 1559.7656,843.9688 1559.9844,843.9688 C1560.25,843.9688 1560.5156,843.8281 1560.6875,843.6094 C1560.7969,843.4531 1560.8281,843.2656 1560.8281,842.8438 L1560.8281,841.4219 C1560.8281,840.9844 1560.8125,840.8594 1560.7188,840.7031 C1560.5625,840.4375 1560.2813,840.2969 1559.9844,840.2969 C1559.6875,840.2969 1559.4844,840.3906 1559.2656,840.7031 L1559.0938,840.625 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="33" x="1577.25" y="849.1074">Stack</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1429" x2="1726" y1="860.9531" y2="860.9531"/><ellipse cx="1439" cy="871.9531" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="67" x="1448" y="875.1636">int Capacity</text><ellipse cx="1439" cy="884.7578" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="102" x="1448" y="887.9683">List&lt;ICard&gt; Cards</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1429" x2="1726" y1="894.5625" y2="894.5625"/><ellipse cx="1439" cy="905.5625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="87" x="1448" y="908.7729">void AddCard();</text><ellipse cx="1439" cy="918.3672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="113" x="1448" y="921.5776">void RemoveCard();</text><ellipse cx="1439" cy="931.1719" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="62" x="1448" y="934.3823">int Count();</text><ellipse cx="1439" cy="943.9766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="84" x="1448" y="947.187">bool IsEmpty();</text><ellipse cx="1439" cy="956.7813" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="65" x="1448" y="959.9917">CardStack()</text><ellipse cx="1439" cy="969.5859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="63" x="1448" y="972.7964">void Print();</text><ellipse cx="1439" cy="982.3906" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="183" x="1448" y="985.6011">ICard GetHighestDamageCard(),</text><ellipse cx="1439" cy="995.1953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="251" x="1448" y="998.4058">CardStack GenerateRandomSpell(int count);</text><ellipse cx="1439" cy="1008" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="273" x="1448" y="1011.2104">CardStack GenerateRandomMonsters(int count);</text><ellipse cx="1439" cy="1020.8047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="184" x="1448" y="1024.0151">CardStack GenerateCardStack();</text><!--MD5=[4e2ad48a1abc117fdc6f339da0f64213]
class Package--><rect codeLine="153" fill="#FEFECE" filter="url(#f1gfqg7viciu7t)" height="163.2422" id="Package" style="stroke:#A80036;stroke-width:1.5;" width="273" x="1762" y="848.4531"/><ellipse cx="1869.25" cy="864.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1871.5938,860.125 C1870.6563,859.6875 1870.0625,859.5469 1869.1875,859.5469 C1866.5625,859.5469 1864.5625,861.625 1864.5625,864.3438 L1864.5625,865.4688 C1864.5625,868.0469 1866.6719,869.9375 1869.5625,869.9375 C1870.7813,869.9375 1871.9375,869.6406 1872.6875,869.0938 C1873.2656,868.6875 1873.5938,868.2344 1873.5938,867.8438 C1873.5938,867.3906 1873.2031,867 1872.7344,867 C1872.5156,867 1872.3125,867.0781 1872.125,867.2656 C1871.6719,867.75 1871.6719,867.75 1871.4844,867.8438 C1871.0625,868.1094 1870.375,868.2344 1869.6094,868.2344 C1867.5625,868.2344 1866.2656,867.1406 1866.2656,865.4375 L1866.2656,864.3438 C1866.2656,862.5625 1867.5156,861.25 1869.25,861.25 C1869.8281,861.25 1870.4375,861.4063 1870.9063,861.6563 C1871.3906,861.9375 1871.5625,862.1563 1871.6563,862.5625 C1871.7188,862.9688 1871.75,863.0938 1871.8906,863.2188 C1872.0313,863.3594 1872.2656,863.4688 1872.4844,863.4688 C1872.75,863.4688 1873.0156,863.3281 1873.1875,863.1094 C1873.2969,862.9531 1873.3281,862.7656 1873.3281,862.3438 L1873.3281,860.9219 C1873.3281,860.4844 1873.3125,860.3594 1873.2188,860.2031 C1873.0625,859.9375 1872.7813,859.7969 1872.4844,859.7969 C1872.1875,859.7969 1871.9844,859.8906 1871.7656,860.2031 L1871.5938,860.125 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="50" x="1889.75" y="868.6074">Package</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1763" x2="2034" y1="880.4531" y2="880.4531"/><ellipse cx="1773" cy="891.4531" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="67" x="1782" y="894.6636">int Capacity</text><ellipse cx="1773" cy="904.2578" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="102" x="1782" y="907.4683">List&lt;ICard&gt; Cards</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1763" x2="2034" y1="914.0625" y2="914.0625"/><ellipse cx="1773" cy="925.0625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="87" x="1782" y="928.2729">void AddCard();</text><ellipse cx="1773" cy="937.8672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="113" x="1782" y="941.0776">void RemoveCard();</text><ellipse cx="1773" cy="950.6719" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="62" x="1782" y="953.8823">int Count();</text><ellipse cx="1773" cy="963.4766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="84" x="1782" y="966.687">bool IsEmpty();</text><ellipse cx="1773" cy="976.2813" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="164" x="1782" y="979.4917">Package(PackageType type);</text><ellipse cx="1773" cy="989.0859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="63" x="1782" y="992.2964">void Print();</text><ellipse cx="1773" cy="1001.8906" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="247" x="1782" y="1005.1011">void GeneratePackage(PackageType type);</text><!--MD5=[30299a58ba6b78debaaed5ddbb42f29a]
class Deck--><rect codeLine="166" fill="#FEFECE" filter="url(#f1gfqg7viciu7t)" height="163.2422" id="Deck" style="stroke:#A80036;stroke-width:1.5;" width="254" x="1138.5" y="848.4531"/><ellipse cx="1245.75" cy="864.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1248.0938,860.125 C1247.1563,859.6875 1246.5625,859.5469 1245.6875,859.5469 C1243.0625,859.5469 1241.0625,861.625 1241.0625,864.3438 L1241.0625,865.4688 C1241.0625,868.0469 1243.1719,869.9375 1246.0625,869.9375 C1247.2813,869.9375 1248.4375,869.6406 1249.1875,869.0938 C1249.7656,868.6875 1250.0938,868.2344 1250.0938,867.8438 C1250.0938,867.3906 1249.7031,867 1249.2344,867 C1249.0156,867 1248.8125,867.0781 1248.625,867.2656 C1248.1719,867.75 1248.1719,867.75 1247.9844,867.8438 C1247.5625,868.1094 1246.875,868.2344 1246.1094,868.2344 C1244.0625,868.2344 1242.7656,867.1406 1242.7656,865.4375 L1242.7656,864.3438 C1242.7656,862.5625 1244.0156,861.25 1245.75,861.25 C1246.3281,861.25 1246.9375,861.4063 1247.4063,861.6563 C1247.8906,861.9375 1248.0625,862.1563 1248.1563,862.5625 C1248.2188,862.9688 1248.25,863.0938 1248.3906,863.2188 C1248.5313,863.3594 1248.7656,863.4688 1248.9844,863.4688 C1249.25,863.4688 1249.5156,863.3281 1249.6875,863.1094 C1249.7969,862.9531 1249.8281,862.7656 1249.8281,862.3438 L1249.8281,860.9219 C1249.8281,860.4844 1249.8125,860.3594 1249.7188,860.2031 C1249.5625,859.9375 1249.2813,859.7969 1248.9844,859.7969 C1248.6875,859.7969 1248.4844,859.8906 1248.2656,860.2031 L1248.0938,860.125 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="31" x="1266.25" y="868.6074">Deck</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1139.5" x2="1391.5" y1="880.4531" y2="880.4531"/><ellipse cx="1149.5" cy="891.4531" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="67" x="1158.5" y="894.6636">int Capacity</text><ellipse cx="1149.5" cy="904.2578" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="102" x="1158.5" y="907.4683">List&lt;ICard&gt; Cards</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1139.5" x2="1391.5" y1="914.0625" y2="914.0625"/><ellipse cx="1149.5" cy="925.0625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="87" x="1158.5" y="928.2729">void AddCard();</text><ellipse cx="1149.5" cy="937.8672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="113" x="1158.5" y="941.0776">void RemoveCard();</text><ellipse cx="1149.5" cy="950.6719" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="62" x="1158.5" y="953.8823">int Count();</text><ellipse cx="1149.5" cy="963.4766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="84" x="1158.5" y="966.687">bool IsEmpty();</text><ellipse cx="1149.5" cy="976.2813" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="40" x="1158.5" y="979.4917">Deck();</text><ellipse cx="1149.5" cy="989.0859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="63" x="1158.5" y="992.2964">void Print();</text><ellipse cx="1149.5" cy="1001.8906" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="228" x="1158.5" y="1005.1011">Deck AutoCreateDeck(CardStack stack);</text><!--MD5=[ce96d99963b7604e699c9820b6972d89]
class ICardCollection--><rect codeLine="179" fill="#FEFECE" filter="url(#f1gfqg7viciu7t)" height="48" id="ICardCollection" style="stroke:#A80036;stroke-width:1.5;" width="122" x="1516.5" y="1184.9531"/><ellipse cx="1531.5" cy="1200.9531" fill="#B4A7E5" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1532.4531,1197.7344 L1534.1719,1197.7344 C1534.5625,1197.7344 1534.75,1197.7031 1534.875,1197.625 C1535.1406,1197.4688 1535.2813,1197.1875 1535.2813,1196.8906 C1535.2813,1196.625 1535.1719,1196.3594 1534.9375,1196.1875 C1534.7656,1196.0781 1534.625,1196.0469 1534.1719,1196.0469 L1529.0313,1196.0469 C1528.5938,1196.0469 1528.4688,1196.0625 1528.3125,1196.1563 C1528.0625,1196.3125 1527.9063,1196.6094 1527.9063,1196.8906 C1527.9063,1197.1719 1528.0469,1197.4219 1528.2656,1197.5938 C1528.4219,1197.7031 1528.6094,1197.7344 1529.0313,1197.7344 L1530.75,1197.7344 L1530.75,1204.25 L1529.0313,1204.25 C1528.5938,1204.25 1528.4688,1204.2656 1528.3125,1204.375 C1528.0625,1204.5313 1527.9063,1204.8125 1527.9063,1205.1094 C1527.9063,1205.3594 1528.0469,1205.625 1528.2656,1205.7813 C1528.4219,1205.9063 1528.625,1205.9531 1529.0313,1205.9531 L1534.1719,1205.9531 C1534.9219,1205.9531 1535.2813,1205.6719 1535.2813,1205.1094 C1535.2813,1204.8281 1535.1719,1204.5781 1534.9375,1204.4063 C1534.7656,1204.2813 1534.625,1204.25 1534.1719,1204.25 L1532.4531,1204.25 L1532.4531,1197.7344 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="90" x="1545.5" y="1205.1074">ICardCollection</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1517.5" x2="1637.5" y1="1216.9531" y2="1216.9531"/><line style="stroke:#A80036;stroke-width:1.5;" x1="1517.5" x2="1637.5" y1="1224.9531" y2="1224.9531"/><!--MD5=[56044dde1eb5c59443a17cac917b404f]
class Battle--><rect codeLine="186" fill="#FEFECE" filter="url(#f1gfqg7viciu7t)" height="176.0469" id="Battle" style="stroke:#A80036;stroke-width:1.5;" width="460" x="1021.5" y="1120.9531"/><ellipse cx="1230.25" cy="1136.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1232.5938,1132.625 C1231.6563,1132.1875 1231.0625,1132.0469 1230.1875,1132.0469 C1227.5625,1132.0469 1225.5625,1134.125 1225.5625,1136.8438 L1225.5625,1137.9688 C1225.5625,1140.5469 1227.6719,1142.4375 1230.5625,1142.4375 C1231.7813,1142.4375 1232.9375,1142.1406 1233.6875,1141.5938 C1234.2656,1141.1875 1234.5938,1140.7344 1234.5938,1140.3438 C1234.5938,1139.8906 1234.2031,1139.5 1233.7344,1139.5 C1233.5156,1139.5 1233.3125,1139.5781 1233.125,1139.7656 C1232.6719,1140.25 1232.6719,1140.25 1232.4844,1140.3438 C1232.0625,1140.6094 1231.375,1140.7344 1230.6094,1140.7344 C1228.5625,1140.7344 1227.2656,1139.6406 1227.2656,1137.9375 L1227.2656,1136.8438 C1227.2656,1135.0625 1228.5156,1133.75 1230.25,1133.75 C1230.8281,1133.75 1231.4375,1133.9063 1231.9063,1134.1563 C1232.3906,1134.4375 1232.5625,1134.6563 1232.6563,1135.0625 C1232.7188,1135.4688 1232.75,1135.5938 1232.8906,1135.7188 C1233.0313,1135.8594 1233.2656,1135.9688 1233.4844,1135.9688 C1233.75,1135.9688 1234.0156,1135.8281 1234.1875,1135.6094 C1234.2969,1135.4531 1234.3281,1135.2656 1234.3281,1134.8438 L1234.3281,1133.4219 C1234.3281,1132.9844 1234.3125,1132.8594 1234.2188,1132.7031 C1234.0625,1132.4375 1233.7813,1132.2969 1233.4844,1132.2969 C1233.1875,1132.2969 1232.9844,1132.3906 1232.7656,1132.7031 L1232.5938,1132.625 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="34" x="1250.75" y="1141.1074">Battle</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1022.5" x2="1480.5" y1="1152.9531" y2="1152.9531"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1029.5" y="1160.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="66" x="1041.5" y="1167.1636">IUser User1</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1029.5" y="1173.7578"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="66" x="1041.5" y="1179.9683">IUser User2</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1022.5" x2="1480.5" y1="1186.5625" y2="1186.5625"/><ellipse cx="1032.5" cy="1197.5625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="115" x="1041.5" y="1200.7729">Battle(User1, User2)</text><ellipse cx="1032.5" cy="1210.3672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="105" x="1041.5" y="1213.5776">IUser StartBattle();</text><ellipse cx="1032.5" cy="1223.1719" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="266" x="1041.5" y="1226.3823">void Round(int round, ICard card1, ICard card2);</text><ellipse cx="1032.5" cy="1235.9766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="258" x="1041.5" y="1239.187">ICard MonsterBattle(ICard card1, ICard card2);</text><ellipse cx="1032.5" cy="1248.7813" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="242" x="1041.5" y="1251.9917">ICard SpellBattle(ICard card1, ICard card2);</text><ellipse cx="1032.5" cy="1261.5859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="247" x="1041.5" y="1264.7964">ICard MixedBattle(ICard card1, ICard card2);</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1029.5" y="1271.3906"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="434" x="1041.5" y="1277.6011">ICard CalculateDamage(ICard card1, ICard card2, bool considerWeaknesses)</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1029.5" y="1284.1953"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="76" x="1041.5" y="1290.4058">ResetDecks()</text><!--MD5=[3cb733312f7895300e37fe17df78e7ca]
class BattleRequest--><rect codeLine="200" fill="#FEFECE" filter="url(#f1gfqg7viciu7t)" height="124.8281" id="BattleRequest" style="stroke:#A80036;stroke-width:1.5;" width="356" x="2569.5" y="867.4531"/><ellipse cx="2701.75" cy="883.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M2704.0938,879.125 C2703.1563,878.6875 2702.5625,878.5469 2701.6875,878.5469 C2699.0625,878.5469 2697.0625,880.625 2697.0625,883.3438 L2697.0625,884.4688 C2697.0625,887.0469 2699.1719,888.9375 2702.0625,888.9375 C2703.2813,888.9375 2704.4375,888.6406 2705.1875,888.0938 C2705.7656,887.6875 2706.0938,887.2344 2706.0938,886.8438 C2706.0938,886.3906 2705.7031,886 2705.2344,886 C2705.0156,886 2704.8125,886.0781 2704.625,886.2656 C2704.1719,886.75 2704.1719,886.75 2703.9844,886.8438 C2703.5625,887.1094 2702.875,887.2344 2702.1094,887.2344 C2700.0625,887.2344 2698.7656,886.1406 2698.7656,884.4375 L2698.7656,883.3438 C2698.7656,881.5625 2700.0156,880.25 2701.75,880.25 C2702.3281,880.25 2702.9375,880.4063 2703.4063,880.6563 C2703.8906,880.9375 2704.0625,881.1563 2704.1563,881.5625 C2704.2188,881.9688 2704.25,882.0938 2704.3906,882.2188 C2704.5313,882.3594 2704.7656,882.4688 2704.9844,882.4688 C2705.25,882.4688 2705.5156,882.3281 2705.6875,882.1094 C2705.7969,881.9531 2705.8281,881.7656 2705.8281,881.3438 L2705.8281,879.9219 C2705.8281,879.4844 2705.8125,879.3594 2705.7188,879.2031 C2705.5625,878.9375 2705.2813,878.7969 2704.9844,878.7969 C2704.6875,878.7969 2704.4844,878.8906 2704.2656,879.2031 L2704.0938,879.125 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="83" x="2722.25" y="887.6074">BattleRequest</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2570.5" x2="2924.5" y1="899.4531" y2="899.4531"/><ellipse cx="2580.5" cy="910.4531" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="28" x="2589.5" y="913.6636">int Id</text><ellipse cx="2580.5" cy="923.2578" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="51" x="2589.5" y="926.4683">int User1</text><ellipse cx="2580.5" cy="936.0625" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="51" x="2589.5" y="939.2729">int User2</text><ellipse cx="2580.5" cy="948.8672" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="91" x="2589.5" y="952.0776">bool Completed</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2570.5" x2="2924.5" y1="958.6719" y2="958.6719"/><ellipse cx="2580.5" cy="969.6719" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="330" x="2589.5" y="972.8823">BattleRequest(int id, int user1, int user2, bool completed);</text><ellipse cx="2580.5" cy="982.4766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="199" x="2589.5" y="985.687">BattleRequest(int user1, int user2);</text><!--MD5=[af8ed831b3fe9dbd380fec6c597723ab]
class Offer--><rect codeLine="210" fill="#FEFECE" filter="url(#f1gfqg7viciu7t)" height="176.0469" id="Offer" style="stroke:#A80036;stroke-width:1.5;" width="464" x="2070.5" y="841.9531"/><ellipse cx="2282.75" cy="857.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M2285.0938,853.625 C2284.1563,853.1875 2283.5625,853.0469 2282.6875,853.0469 C2280.0625,853.0469 2278.0625,855.125 2278.0625,857.8438 L2278.0625,858.9688 C2278.0625,861.5469 2280.1719,863.4375 2283.0625,863.4375 C2284.2813,863.4375 2285.4375,863.1406 2286.1875,862.5938 C2286.7656,862.1875 2287.0938,861.7344 2287.0938,861.3438 C2287.0938,860.8906 2286.7031,860.5 2286.2344,860.5 C2286.0156,860.5 2285.8125,860.5781 2285.625,860.7656 C2285.1719,861.25 2285.1719,861.25 2284.9844,861.3438 C2284.5625,861.6094 2283.875,861.7344 2283.1094,861.7344 C2281.0625,861.7344 2279.7656,860.6406 2279.7656,858.9375 L2279.7656,857.8438 C2279.7656,856.0625 2281.0156,854.75 2282.75,854.75 C2283.3281,854.75 2283.9375,854.9063 2284.4063,855.1563 C2284.8906,855.4375 2285.0625,855.6563 2285.1563,856.0625 C2285.2188,856.4688 2285.25,856.5938 2285.3906,856.7188 C2285.5313,856.8594 2285.7656,856.9688 2285.9844,856.9688 C2286.25,856.9688 2286.5156,856.8281 2286.6875,856.6094 C2286.7969,856.4531 2286.8281,856.2656 2286.8281,855.8438 L2286.8281,854.4219 C2286.8281,853.9844 2286.8125,853.8594 2286.7188,853.7031 C2286.5625,853.4375 2286.2813,853.2969 2285.9844,853.2969 C2285.6875,853.2969 2285.4844,853.3906 2285.2656,853.7031 L2285.0938,853.625 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="31" x="2303.25" y="862.1074">Offer</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2071.5" x2="2533.5" y1="873.9531" y2="873.9531"/><ellipse cx="2081.5" cy="884.9531" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="28" x="2090.5" y="888.1636">int Id</text><ellipse cx="2081.5" cy="897.7578" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="54" x="2090.5" y="900.9683">int UserId</text><ellipse cx="2081.5" cy="910.5625" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="54" x="2090.5" y="913.7729">int CardId</text><ellipse cx="2081.5" cy="923.3672" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="66" x="2090.5" y="926.5776">int Element</text><ellipse cx="2081.5" cy="936.1719" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="63" x="2090.5" y="939.3823">int Monster</text><ellipse cx="2081.5" cy="948.9766" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="86" x="2090.5" y="952.187">int MinDamage</text><ellipse cx="2081.5" cy="961.7813" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="45" x="2090.5" y="964.9917">int Price</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2071.5" x2="2533.5" y1="971.5859" y2="971.5859"/><ellipse cx="2081.5" cy="982.5859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="438" x="2090.5" y="985.7964">Offer(int id, int user, int card, int element, int monster, int damage, int price);</text><ellipse cx="2081.5" cy="995.3906" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="88" x="2090.5" y="998.6011">void PrintOwn();</text><ellipse cx="2081.5" cy="1008.1953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="95" x="2090.5" y="1011.4058">void PrintOther();</text><!--MD5=[4555bb1b0911a5adf28ce6dbe60fed2e]
class Transaction--><rect codeLine="224" fill="#FEFECE" filter="url(#f1gfqg7viciu7t)" height="201.6563" id="Transaction" style="stroke:#A80036;stroke-width:1.5;" width="496" x="1817.5" y="1107.9531"/><ellipse cx="2026.75" cy="1123.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M2029.0938,1119.625 C2028.1563,1119.1875 2027.5625,1119.0469 2026.6875,1119.0469 C2024.0625,1119.0469 2022.0625,1121.125 2022.0625,1123.8438 L2022.0625,1124.9688 C2022.0625,1127.5469 2024.1719,1129.4375 2027.0625,1129.4375 C2028.2813,1129.4375 2029.4375,1129.1406 2030.1875,1128.5938 C2030.7656,1128.1875 2031.0938,1127.7344 2031.0938,1127.3438 C2031.0938,1126.8906 2030.7031,1126.5 2030.2344,1126.5 C2030.0156,1126.5 2029.8125,1126.5781 2029.625,1126.7656 C2029.1719,1127.25 2029.1719,1127.25 2028.9844,1127.3438 C2028.5625,1127.6094 2027.875,1127.7344 2027.1094,1127.7344 C2025.0625,1127.7344 2023.7656,1126.6406 2023.7656,1124.9375 L2023.7656,1123.8438 C2023.7656,1122.0625 2025.0156,1120.75 2026.75,1120.75 C2027.3281,1120.75 2027.9375,1120.9063 2028.4063,1121.1563 C2028.8906,1121.4375 2029.0625,1121.6563 2029.1563,1122.0625 C2029.2188,1122.4688 2029.25,1122.5938 2029.3906,1122.7188 C2029.5313,1122.8594 2029.7656,1122.9688 2029.9844,1122.9688 C2030.25,1122.9688 2030.5156,1122.8281 2030.6875,1122.6094 C2030.7969,1122.4531 2030.8281,1122.2656 2030.8281,1121.8438 L2030.8281,1120.4219 C2030.8281,1119.9844 2030.8125,1119.8594 2030.7188,1119.7031 C2030.5625,1119.4375 2030.2813,1119.2969 2029.9844,1119.2969 C2029.6875,1119.2969 2029.4844,1119.3906 2029.2656,1119.7031 L2029.0938,1119.625 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="69" x="2047.25" y="1128.1074">Transaction</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1818.5" x2="2312.5" y1="1139.9531" y2="1139.9531"/><ellipse cx="1828.5" cy="1150.9531" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="28" x="1837.5" y="1154.1636">int Id</text><ellipse cx="1828.5" cy="1163.7578" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="51" x="1837.5" y="1166.9683">int User1</text><ellipse cx="1828.5" cy="1176.5625" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="51" x="1837.5" y="1179.7729">int User2</text><ellipse cx="1828.5" cy="1189.3672" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="51" x="1837.5" y="1192.5776">int Card1</text><ellipse cx="1828.5" cy="1202.1719" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="51" x="1837.5" y="1205.3823">int Card2</text><ellipse cx="1828.5" cy="1214.9766" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="49" x="1837.5" y="1218.187">int Coins</text><ellipse cx="1828.5" cy="1227.7813" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="82" x="1837.5" y="1230.9917">int Timestamp</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1818.5" x2="2312.5" y1="1237.5859" y2="1237.5859"/><ellipse cx="1828.5" cy="1248.5859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="470" x="1837.5" y="1251.7964">Transaction(int id, int user1, int user2, int card1, int card2, int coins, int timestamp);</text><ellipse cx="1828.5" cy="1261.3906" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="414" x="1837.5" y="1264.6011">Transaction(int id, int user1, int user2, int card2, int coins, int timestamp);</text><ellipse cx="1828.5" cy="1274.1953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="301" x="1837.5" y="1277.4058">Transaction(int id, int user1, int coins, int timestamp);</text><ellipse cx="1828.5" cy="1287" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="128" x="1837.5" y="1290.2104">void PrintTransaction();</text><ellipse cx="1828.5" cy="1299.8047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="360" x="1837.5" y="1303.0151">DateTime ConvertUnixTimeStampToDateTime(long unixTime);</text><!--MD5=[288b8a68e6448ac8b00b2d406121b343]
class DBConnection--><rect codeLine="242" fill="#FEFECE" filter="url(#f1gfqg7viciu7t)" height="73.6094" id="DBConnection" style="stroke:#A80036;stroke-width:1.5;" width="173" x="3057" y="492.4531"/><ellipse cx="3097.65" cy="508.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M3099.9938,504.125 C3099.0563,503.6875 3098.4625,503.5469 3097.5875,503.5469 C3094.9625,503.5469 3092.9625,505.625 3092.9625,508.3438 L3092.9625,509.4688 C3092.9625,512.0469 3095.0719,513.9375 3097.9625,513.9375 C3099.1813,513.9375 3100.3375,513.6406 3101.0875,513.0938 C3101.6656,512.6875 3101.9938,512.2344 3101.9938,511.8438 C3101.9938,511.3906 3101.6031,511 3101.1344,511 C3100.9156,511 3100.7125,511.0781 3100.525,511.2656 C3100.0719,511.75 3100.0719,511.75 3099.8844,511.8438 C3099.4625,512.1094 3098.775,512.2344 3098.0094,512.2344 C3095.9625,512.2344 3094.6656,511.1406 3094.6656,509.4375 L3094.6656,508.3438 C3094.6656,506.5625 3095.9156,505.25 3097.65,505.25 C3098.2281,505.25 3098.8375,505.4063 3099.3063,505.6563 C3099.7906,505.9375 3099.9625,506.1563 3100.0563,506.5625 C3100.1188,506.9688 3100.15,507.0938 3100.2906,507.2188 C3100.4313,507.3594 3100.6656,507.4688 3100.8844,507.4688 C3101.15,507.4688 3101.4156,507.3281 3101.5875,507.1094 C3101.6969,506.9531 3101.7281,506.7656 3101.7281,506.3438 L3101.7281,504.9219 C3101.7281,504.4844 3101.7125,504.3594 3101.6188,504.2031 C3101.4625,503.9375 3101.1813,503.7969 3100.8844,503.7969 C3100.5875,503.7969 3100.3844,503.8906 3100.1656,504.2031 L3099.9938,504.125 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="84" x="3117.35" y="512.6074">DBConnection</text><line style="stroke:#A80036;stroke-width:1.5;" x1="3058" x2="3229" y1="524.4531" y2="524.4531"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3065" y="532.4531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="97" x="3077" y="538.6636">string ConnString</text><line style="stroke:#A80036;stroke-width:1.5;" x1="3058" x2="3229" y1="545.2578" y2="545.2578"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3065" y="553.2578"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="3077" y="559.4683">NpgsqlConnect Connect();</text><!--MD5=[88ef5fbbc8be625016b41a57016c7892]
class DBUser--><rect codeLine="247" fill="#FEFECE" filter="url(#f1gfqg7viciu7t)" height="201.6563" id="DBUser" style="stroke:#A80036;stroke-width:1.5;" width="550" x="2067.5" y="27.9531"/><ellipse cx="2315.25" cy="43.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M2317.5938,39.625 C2316.6563,39.1875 2316.0625,39.0469 2315.1875,39.0469 C2312.5625,39.0469 2310.5625,41.125 2310.5625,43.8438 L2310.5625,44.9688 C2310.5625,47.5469 2312.6719,49.4375 2315.5625,49.4375 C2316.7813,49.4375 2317.9375,49.1406 2318.6875,48.5938 C2319.2656,48.1875 2319.5938,47.7344 2319.5938,47.3438 C2319.5938,46.8906 2319.2031,46.5 2318.7344,46.5 C2318.5156,46.5 2318.3125,46.5781 2318.125,46.7656 C2317.6719,47.25 2317.6719,47.25 2317.4844,47.3438 C2317.0625,47.6094 2316.375,47.7344 2315.6094,47.7344 C2313.5625,47.7344 2312.2656,46.6406 2312.2656,44.9375 L2312.2656,43.8438 C2312.2656,42.0625 2313.5156,40.75 2315.25,40.75 C2315.8281,40.75 2316.4375,40.9063 2316.9063,41.1563 C2317.3906,41.4375 2317.5625,41.6563 2317.6563,42.0625 C2317.7188,42.4688 2317.75,42.5938 2317.8906,42.7188 C2318.0313,42.8594 2318.2656,42.9688 2318.4844,42.9688 C2318.75,42.9688 2319.0156,42.8281 2319.1875,42.6094 C2319.2969,42.4531 2319.3281,42.2656 2319.3281,41.8438 L2319.3281,40.4219 C2319.3281,39.9844 2319.3125,39.8594 2319.2188,39.7031 C2319.0625,39.4375 2318.7813,39.2969 2318.4844,39.2969 C2318.1875,39.2969 2317.9844,39.3906 2317.7656,39.7031 L2317.5938,39.625 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="46" x="2335.75" y="48.1074">DBUser</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2068.5" x2="2616.5" y1="59.9531" y2="59.9531"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2075.5" y="67.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="135" x="2087.5" y="74.1636">PasswordHasher hasher</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2075.5" y="80.7578"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="128" x="2087.5" y="86.9683">DBConnection dbConn</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2068.5" x2="2616.5" y1="93.5625" y2="93.5625"/><ellipse cx="2078.5" cy="104.5625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="170" x="2087.5" y="107.7729">bool RegisterUser(IUser user);</text><ellipse cx="2078.5" cy="117.3672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="288" x="2087.5" y="120.5776">IUser LoginUser(string username, string password);</text><ellipse cx="2078.5" cy="130.1719" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="205" x="2087.5" y="133.3823">string GetUsernameByUserId(int id);</text><ellipse cx="2078.5" cy="142.9766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="207" x="2087.5" y="146.187">IUser GetUserObjectByUserId(int id);</text><ellipse cx="2078.5" cy="155.7813" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="167" x="2087.5" y="158.9917">bool UpdateStats(IUser user);</text><ellipse cx="2078.5" cy="168.5859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="524" x="2087.5" y="171.7964">bool ChangePassword(int id, string oldPassword, string newPassword, string repeatPassword);</text><ellipse cx="2078.5" cy="181.3906" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="272" x="2087.5" y="184.6011">bool BuyPackage(Package package, IUser user);</text><ellipse cx="2078.5" cy="194.1953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="148" x="2087.5" y="197.4058">List&lt;IUser&gt; GetAllUsers();</text><ellipse cx="2078.5" cy="207" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="160" x="2087.5" y="210.2104">int GetCoinsByUserId(int id);</text><ellipse cx="2078.5" cy="219.8047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="317" x="2087.5" y="223.0151">bool TransferCoins(IUser sender, int receiver, int coins);</text><!--MD5=[f3d3d519e60ae5492b5656f731b42a19]
class PasswordHasher--><rect codeLine="263" fill="#FEFECE" filter="url(#f1gfqg7viciu7t)" height="99.2188" id="PasswordHasher" style="stroke:#A80036;stroke-width:1.5;" width="323" x="2181" y="479.9531"/><ellipse cx="2287.75" cy="495.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M2290.0938,491.625 C2289.1563,491.1875 2288.5625,491.0469 2287.6875,491.0469 C2285.0625,491.0469 2283.0625,493.125 2283.0625,495.8438 L2283.0625,496.9688 C2283.0625,499.5469 2285.1719,501.4375 2288.0625,501.4375 C2289.2813,501.4375 2290.4375,501.1406 2291.1875,500.5938 C2291.7656,500.1875 2292.0938,499.7344 2292.0938,499.3438 C2292.0938,498.8906 2291.7031,498.5 2291.2344,498.5 C2291.0156,498.5 2290.8125,498.5781 2290.625,498.7656 C2290.1719,499.25 2290.1719,499.25 2289.9844,499.3438 C2289.5625,499.6094 2288.875,499.7344 2288.1094,499.7344 C2286.0625,499.7344 2284.7656,498.6406 2284.7656,496.9375 L2284.7656,495.8438 C2284.7656,494.0625 2286.0156,492.75 2287.75,492.75 C2288.3281,492.75 2288.9375,492.9063 2289.4063,493.1563 C2289.8906,493.4375 2290.0625,493.6563 2290.1563,494.0625 C2290.2188,494.4688 2290.25,494.5938 2290.3906,494.7188 C2290.5313,494.8594 2290.7656,494.9688 2290.9844,494.9688 C2291.25,494.9688 2291.5156,494.8281 2291.6875,494.6094 C2291.7969,494.4531 2291.8281,494.2656 2291.8281,493.8438 L2291.8281,492.4219 C2291.8281,491.9844 2291.8125,491.8594 2291.7188,491.7031 C2291.5625,491.4375 2291.2813,491.2969 2290.9844,491.2969 C2290.6875,491.2969 2290.4844,491.3906 2290.2656,491.7031 L2290.0938,491.625 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="101" x="2308.25" y="500.1074">PasswordHasher</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2182" x2="2503" y1="511.9531" y2="511.9531"/><line style="stroke:#A80036;stroke-width:1.5;" x1="2182" x2="2503" y1="519.9531" y2="519.9531"/><ellipse cx="2192" cy="530.9531" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="240" x="2201" y="534.1636">string Hash(string password, int iterations);</text><ellipse cx="2192" cy="543.7578" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="162" x="2201" y="546.9683">string Hash(string password);</text><ellipse cx="2192" cy="556.5625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="230" x="2201" y="559.7729">bool IsHashSupported(string hashString);</text><ellipse cx="2192" cy="569.3672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="297" x="2201" y="572.5776">bool Verify(string password, string hashedPassword);</text><!--MD5=[b442ae77570a422e7df2a172724d71eb]
class DBTransaction--><rect codeLine="270" fill="#FEFECE" filter="url(#f1gfqg7viciu7t)" height="99.2188" id="DBTransaction" style="stroke:#A80036;stroke-width:1.5;" width="314" x="2652.5" y="79.4531"/><ellipse cx="2762.25" cy="95.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M2764.5938,91.125 C2763.6563,90.6875 2763.0625,90.5469 2762.1875,90.5469 C2759.5625,90.5469 2757.5625,92.625 2757.5625,95.3438 L2757.5625,96.4688 C2757.5625,99.0469 2759.6719,100.9375 2762.5625,100.9375 C2763.7813,100.9375 2764.9375,100.6406 2765.6875,100.0938 C2766.2656,99.6875 2766.5938,99.2344 2766.5938,98.8438 C2766.5938,98.3906 2766.2031,98 2765.7344,98 C2765.5156,98 2765.3125,98.0781 2765.125,98.2656 C2764.6719,98.75 2764.6719,98.75 2764.4844,98.8438 C2764.0625,99.1094 2763.375,99.2344 2762.6094,99.2344 C2760.5625,99.2344 2759.2656,98.1406 2759.2656,96.4375 L2759.2656,95.3438 C2759.2656,93.5625 2760.5156,92.25 2762.25,92.25 C2762.8281,92.25 2763.4375,92.4063 2763.9063,92.6563 C2764.3906,92.9375 2764.5625,93.1563 2764.6563,93.5625 C2764.7188,93.9688 2764.75,94.0938 2764.8906,94.2188 C2765.0313,94.3594 2765.2656,94.4688 2765.4844,94.4688 C2765.75,94.4688 2766.0156,94.3281 2766.1875,94.1094 C2766.2969,93.9531 2766.3281,93.7656 2766.3281,93.3438 L2766.3281,91.9219 C2766.3281,91.4844 2766.3125,91.3594 2766.2188,91.2031 C2766.0625,90.9375 2765.7813,90.7969 2765.4844,90.7969 C2765.1875,90.7969 2764.9844,90.8906 2764.7656,91.2031 L2764.5938,91.125 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="86" x="2782.75" y="99.6074">DBTransaction</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2653.5" x2="2965.5" y1="111.4531" y2="111.4531"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2660.5" y="119.4531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="128" x="2672.5" y="125.6636">DBConnection dbConn</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2653.5" x2="2965.5" y1="132.2578" y2="132.2578"/><ellipse cx="2663.5" cy="143.2578" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="260" x="2672.5" y="146.4683">bool NewTransaction(Transaction transaction);</text><ellipse cx="2663.5" cy="156.0625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="288" x="2672.5" y="159.2729">List&lt;Transaction&gt; GetTransactionsByUserId(int id);</text><ellipse cx="2663.5" cy="168.8672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="204" x="2672.5" y="172.0776">long GetSpentCoinsByUserId(int id);</text><!--MD5=[b19f8e19d88e71aeea36498124822585]
class DBOffer--><rect codeLine="278" fill="#FEFECE" filter="url(#f1gfqg7viciu7t)" height="124.8281" id="DBOffer" style="stroke:#A80036;stroke-width:1.5;" width="283" x="3002" y="66.4531"/><ellipse cx="3115.25" cy="82.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M3117.5938,78.125 C3116.6563,77.6875 3116.0625,77.5469 3115.1875,77.5469 C3112.5625,77.5469 3110.5625,79.625 3110.5625,82.3438 L3110.5625,83.4688 C3110.5625,86.0469 3112.6719,87.9375 3115.5625,87.9375 C3116.7813,87.9375 3117.9375,87.6406 3118.6875,87.0938 C3119.2656,86.6875 3119.5938,86.2344 3119.5938,85.8438 C3119.5938,85.3906 3119.2031,85 3118.7344,85 C3118.5156,85 3118.3125,85.0781 3118.125,85.2656 C3117.6719,85.75 3117.6719,85.75 3117.4844,85.8438 C3117.0625,86.1094 3116.375,86.2344 3115.6094,86.2344 C3113.5625,86.2344 3112.2656,85.1406 3112.2656,83.4375 L3112.2656,82.3438 C3112.2656,80.5625 3113.5156,79.25 3115.25,79.25 C3115.8281,79.25 3116.4375,79.4063 3116.9063,79.6563 C3117.3906,79.9375 3117.5625,80.1563 3117.6563,80.5625 C3117.7188,80.9688 3117.75,81.0938 3117.8906,81.2188 C3118.0313,81.3594 3118.2656,81.4688 3118.4844,81.4688 C3118.75,81.4688 3119.0156,81.3281 3119.1875,81.1094 C3119.2969,80.9531 3119.3281,80.7656 3119.3281,80.3438 L3119.3281,78.9219 C3119.3281,78.4844 3119.3125,78.3594 3119.2188,78.2031 C3119.0625,77.9375 3118.7813,77.7969 3118.4844,77.7969 C3118.1875,77.7969 3117.9844,77.8906 3117.7656,78.2031 L3117.5938,78.125 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="48" x="3135.75" y="86.6074">DBOffer</text><line style="stroke:#A80036;stroke-width:1.5;" x1="3003" x2="3284" y1="98.4531" y2="98.4531"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3010" y="106.4531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="128" x="3022" y="112.6636">DBConnection dbConn</text><line style="stroke:#A80036;stroke-width:1.5;" x1="3003" x2="3284" y1="119.2578" y2="119.2578"/><ellipse cx="3013" cy="130.2578" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="192" x="3022" y="133.4683">bool CreateNewOffer(Offer offer);</text><ellipse cx="3013" cy="143.0625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="216" x="3022" y="146.2729">List&lt;Offer&gt; GetOffersByUserId(int id);</text><ellipse cx="3013" cy="155.8672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="257" x="3022" y="159.0776">List&lt;Offer&gt; GetOffersFromOtherUsers(int id);</text><ellipse cx="3013" cy="168.6719" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="198" x="3022" y="171.8823">bool RemoveOfferByOfferId(int id);</text><ellipse cx="3013" cy="181.4766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="257" x="3022" y="184.687">bool UpdateOffer(int offerId, Offer newOffer);</text><!--MD5=[c03f7f7eb738c75148967430efa0d53b]
class DBCard--><rect codeLine="288" fill="#FEFECE" filter="url(#f1gfqg7viciu7t)" height="201.6563" id="DBCard" style="stroke:#A80036;stroke-width:1.5;" width="495" x="3320" y="27.9531"/><ellipse cx="3540.75" cy="43.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M3543.0938,39.625 C3542.1563,39.1875 3541.5625,39.0469 3540.6875,39.0469 C3538.0625,39.0469 3536.0625,41.125 3536.0625,43.8438 L3536.0625,44.9688 C3536.0625,47.5469 3538.1719,49.4375 3541.0625,49.4375 C3542.2813,49.4375 3543.4375,49.1406 3544.1875,48.5938 C3544.7656,48.1875 3545.0938,47.7344 3545.0938,47.3438 C3545.0938,46.8906 3544.7031,46.5 3544.2344,46.5 C3544.0156,46.5 3543.8125,46.5781 3543.625,46.7656 C3543.1719,47.25 3543.1719,47.25 3542.9844,47.3438 C3542.5625,47.6094 3541.875,47.7344 3541.1094,47.7344 C3539.0625,47.7344 3537.7656,46.6406 3537.7656,44.9375 L3537.7656,43.8438 C3537.7656,42.0625 3539.0156,40.75 3540.75,40.75 C3541.3281,40.75 3541.9375,40.9063 3542.4063,41.1563 C3542.8906,41.4375 3543.0625,41.6563 3543.1563,42.0625 C3543.2188,42.4688 3543.25,42.5938 3543.3906,42.7188 C3543.5313,42.8594 3543.7656,42.9688 3543.9844,42.9688 C3544.25,42.9688 3544.5156,42.8281 3544.6875,42.6094 C3544.7969,42.4531 3544.8281,42.2656 3544.8281,41.8438 L3544.8281,40.4219 C3544.8281,39.9844 3544.8125,39.8594 3544.7188,39.7031 C3544.5625,39.4375 3544.2813,39.2969 3543.9844,39.2969 C3543.6875,39.2969 3543.4844,39.3906 3543.2656,39.7031 L3543.0938,39.625 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="45" x="3561.25" y="48.1074">DBCard</text><line style="stroke:#A80036;stroke-width:1.5;" x1="3321" x2="3814" y1="59.9531" y2="59.9531"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3328" y="67.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="128" x="3340" y="74.1636">DBConnection dbConn</text><line style="stroke:#A80036;stroke-width:1.5;" x1="3321" x2="3814" y1="80.7578" y2="80.7578"/><ellipse cx="3331" cy="91.7578" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="267" x="3340" y="94.9683">CardStack GetCardStackFromUserId(int userId);</text><ellipse cx="3331" cy="104.5625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="211" x="3340" y="107.7729">Deck GetDeckFromUserId(int userId);</text><ellipse cx="3331" cy="117.3672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="256" x="3340" y="120.5776">CardStack GetAllCardsFromUserId(int userId);</text><ellipse cx="3331" cy="130.1719" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="165" x="3340" y="133.3823">int GetCardOwner(int cardId);</text><ellipse cx="3331" cy="142.9766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="194" x="3340" y="146.187">ICard GetCardByCardId(int cardId);</text><ellipse cx="3331" cy="155.7813" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="229" x="3340" y="158.9917">bool UpdateDeck(int userId, Deck deck);</text><ellipse cx="3331" cy="168.5859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="313" x="3340" y="171.7964">bool AddPackageToCards(Package package, int userId);</text><ellipse cx="3331" cy="181.3906" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="469" x="3340" y="184.6011">CardStack GetMatchingCards(int userId, int element, int monster, int minDamage);</text><ellipse cx="3331" cy="194.1953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="254" x="3340" y="197.4058">bool SwitchOwners(ICard card1, ICard card2);</text><ellipse cx="3331" cy="207" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="344" x="3340" y="210.2104">bool SwitchOwnerAgainstCoins(IUser newOwner, ICard card);</text><ellipse cx="3331" cy="219.8047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="195" x="3340" y="223.0151">bool UpdateCardLevel(ICard card);</text><!--MD5=[2877404327e9d7f3bcb16167cd25030d]
class DBBattle--><rect codeLine="304" fill="#FEFECE" filter="url(#f1gfqg7viciu7t)" height="99.2188" id="DBBattle" style="stroke:#A80036;stroke-width:1.5;" width="357" x="3850" y="79.4531"/><ellipse cx="3998.75" cy="95.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M4001.0938,91.125 C4000.1563,90.6875 3999.5625,90.5469 3998.6875,90.5469 C3996.0625,90.5469 3994.0625,92.625 3994.0625,95.3438 L3994.0625,96.4688 C3994.0625,99.0469 3996.1719,100.9375 3999.0625,100.9375 C4000.2813,100.9375 4001.4375,100.6406 4002.1875,100.0938 C4002.7656,99.6875 4003.0938,99.2344 4003.0938,98.8438 C4003.0938,98.3906 4002.7031,98 4002.2344,98 C4002.0156,98 4001.8125,98.0781 4001.625,98.2656 C4001.1719,98.75 4001.1719,98.75 4000.9844,98.8438 C4000.5625,99.1094 3999.875,99.2344 3999.1094,99.2344 C3997.0625,99.2344 3995.7656,98.1406 3995.7656,96.4375 L3995.7656,95.3438 C3995.7656,93.5625 3997.0156,92.25 3998.75,92.25 C3999.3281,92.25 3999.9375,92.4063 4000.4063,92.6563 C4000.8906,92.9375 4001.0625,93.1563 4001.1563,93.5625 C4001.2188,93.9688 4001.25,94.0938 4001.3906,94.2188 C4001.5313,94.3594 4001.7656,94.4688 4001.9844,94.4688 C4002.25,94.4688 4002.5156,94.3281 4002.6875,94.1094 C4002.7969,93.9531 4002.8281,93.7656 4002.8281,93.3438 L4002.8281,91.9219 C4002.8281,91.4844 4002.8125,91.3594 4002.7188,91.2031 C4002.5625,90.9375 4002.2813,90.7969 4001.9844,90.7969 C4001.6875,90.7969 4001.4844,90.8906 4001.2656,91.2031 L4001.0938,91.125 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="51" x="4019.25" y="99.6074">DBBattle</text><line style="stroke:#A80036;stroke-width:1.5;" x1="3851" x2="4206" y1="111.4531" y2="111.4531"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3858" y="119.4531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="128" x="3870" y="125.6636">DBConnection dbConn</text><line style="stroke:#A80036;stroke-width:1.5;" x1="3851" x2="4206" y1="132.2578" y2="132.2578"/><ellipse cx="3861" cy="143.2578" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="263" x="3870" y="146.4683">bool CreateBattleRequest(BattleRequest req);</text><ellipse cx="3861" cy="156.0625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="331" x="3870" y="159.2729">List&lt;BattleRequest&gt; GetAllOpenRequestsByUserId(int id);</text><ellipse cx="3861" cy="168.8672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="221" x="3870" y="172.0776">bool RemoveBattleRequestById(int id);</text><!--MD5=[f02b7b34b77c0a39789b190bf2d9726c]
reverse link IUser to User--><path codeLine="100" d="M1898.5,173.1231 C1898.5,206.5631 1898.5,255.6631 1898.5,306.7631 " fill="none" id="IUser-backto-User" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="1891.5,173.1031,1898.5,153.1031,1905.5,173.1031,1891.5,173.1031" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[c8618a00813861b92dfb8f63b196ade5]
link Card to ICard--><path codeLine="115" d="M891.706,1257.7511 C926.379,1275.0341 966.389,1294.1631 1003.5,1309.9531 C1080.15,1342.5637 1171.42,1374.4222 1227.14,1393.1151 " fill="none" id="Card-to-ICard" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="1229.55,1386.5377,1246.31,1399.4961,1225.12,1399.8211,1229.55,1386.5377" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[0fe7698be8d6fa6e0a16ccffffb8c808]
link Spell to Card--><path codeLine="125" d="M359.465,992.6001 C458.36,1040.9991 594.692,1107.7201 689.291,1154.0171 " fill="none" id="Spell-to-Card" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="692.448,1147.7681,707.335,1162.8481,686.294,1160.3431,692.448,1147.7681" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[5c04a6a996871f5fd5beae5c0a8dd825]
link Monster to Card--><path codeLine="135" d="M799.5,992.7721 C799.5,1028.3611 799.5,1073.8121 799.5,1113.7651 " fill="none" id="Monster-to-Card" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="806.5,1113.7721,799.5,1133.7721,792.5,1113.7721,806.5,1113.7721" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[a525ee9bca5c0c861b8c9b92375c166a]
link User to Stack--><path codeLine="151" d="M1719.93,752.1351 C1699.63,777.3371 1679.72,802.0551 1661.52,824.6481 " fill="none" id="User-to-Stack" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="1658.38,828.5471,1667.1378,824.0415,1661.5139,824.6511,1660.9043,819.0272,1658.38,828.5471" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="23" x="1691.5" y="795.02">has</text><!--MD5=[17a885d3bac6a62ed1518984dcec90a6]
link User to Package--><path codeLine="164" d="M1898.5,752.1351 C1898.5,784.4761 1898.5,816.0201 1898.5,843.2981 " fill="none" id="User-to-Package" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="1898.5,848.3411,1902.5,839.3411,1898.5,843.3411,1894.5,839.3411,1898.5,848.3411" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="31" x="1899.5" y="795.02">buys</text><!--MD5=[f23da0e79fa4360295ce260f36319316]
link User to Deck--><path codeLine="177" d="M1651.48,741.3691 C1645.5,745.0261 1639.5,748.5611 1633.5,751.9531 C1542.21,803.5371 1504.07,781.6431 1410.5,828.9531 C1400.47,834.0241 1390.33,839.6991 1380.32,845.7021 " fill="none" id="User-to-Deck" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="1376.04,848.2931,1385.8083,847.0362,1380.3125,845.6959,1381.6528,840.2001,1376.04,848.2931" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="30" x="1564.5" y="795.02">uses</text><!--MD5=[5f0fd354a2446a402455893adde1e4ff]
link Stack to ICardCollection--><path codeLine="181" d="M1577.5,1030.9561 C1577.5,1076.9191 1577.5,1129.0261 1577.5,1164.7351 " fill="none" id="Stack-to-ICardCollection" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="1584.5,1164.8871,1577.5,1184.8871,1570.5,1164.8871,1584.5,1164.8871" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[cbe8939b6b53beb119f7558bd2f114d2]
link Package to ICardCollection--><path codeLine="182" d="M1804.79,1011.8181 C1743.54,1064.6711 1666.5,1131.1531 1619.68,1171.5571 " fill="none" id="Package-to-ICardCollection" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="1624.17,1176.9291,1604.45,1184.6961,1615.02,1166.3301,1624.17,1176.9291" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[d2a18c5ac07acdd25ea00934fd30756a]
link Deck to ICardCollection--><path codeLine="183" d="M1383.39,1011.4791 C1421.79,1040.0201 1463.51,1073.6201 1498.5,1107.9531 C1517.24,1126.3421 1535.58,1149.1711 1549.87,1168.3721 " fill="none" id="Deck-to-ICardCollection" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="1555.67,1164.4531,1561.74,1184.7541,1544.34,1172.6691,1555.67,1164.4531" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[f54a9cd6e7d8f6bcf0fb48fd607c5dc9]
link ICardCollection to ICard--><path codeLine="184" d="M1563.73,1233.2211 C1549.66,1255.3581 1526.02,1288.3981 1498.5,1309.9531 C1441.61,1354.506 1361.7,1384.3724 1315.48,1399.1485 " fill="none" id="ICardCollection-to-ICard" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="1310.57,1400.7036,1320.3556,1401.8178,1315.3395,1399.2029,1317.9544,1394.1867,1310.57,1400.7036" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="54" x="1450.5" y="1353.02">contains</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="8" x="1551.3986" y="1253.0477">1</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="8" x="1318.4603" y="1393.9023">n</text><!--MD5=[b5e36eec9f6d17ccea20cf5ac5f5fcdf]
link Deck to Battle--><path codeLine="198" d="M1261.41,1011.8181 C1259.77,1044.2551 1257.87,1081.8271 1256.18,1115.3531 " fill="none" id="Deck-to-Battle" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="1255.91,1120.6981,1260.357,1111.9104,1256.1611,1115.7044,1252.367,1111.5086,1255.91,1120.6981" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="60" x="1260.5" y="1074.02">is used in</text><!--MD5=[96efe38d887f5c36e361c6044c0b4c2f]
link User to BattleRequest--><path codeLine="208" d="M2145.72,742.9421 C2151.62,746.0971 2157.55,749.1071 2163.5,751.9531 C2242.8,789.8761 2468.45,800.1491 2551.5,828.9531 C2579.48,838.6561 2608.48,851.6511 2635.33,865.0561 " fill="none" id="User-to-BattleRequest" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="2639.96,867.3861,2633.7117,859.7731,2635.4916,865.1426,2630.1221,866.9226,2639.96,867.3861" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="138" x="2385.5" y="795.02">sends/accepts/denies</text><!--MD5=[3b3633b5fadb562c4314a11f7170905c]
link User to Offer--><path codeLine="222" d="M2123.24,752.1351 C2153.84,782.3211 2183.74,811.8111 2210.08,837.7881 " fill="none" id="User-to-Offer" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="2213.94,841.5941,2210.3265,832.4321,2210.3745,838.0888,2204.7179,838.1368,2213.94,841.5941" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="97" x="2161.5" y="795.02">makes/accepts</text><!--MD5=[e3f750065b34f3f39a135f317ea69bc1]
link Offer to Transaction--><path codeLine="238" d="M2227.84,1018.2171 C2204.69,1045.2731 2178.94,1075.3651 2154.9,1103.4661 " fill="none" id="Offer-to-Transaction" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="2151.36,1107.5971,2160.2583,1103.3758,2154.6177,1103.8041,2154.1895,1098.1635,2151.36,1107.5971" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="173" x="2192.5" y="1074.02">gets saved when accepted</text><!--MD5=[f64c835ed5a478a360d4dee4e94867e8]
link Package to Transaction--><path codeLine="239" d="M1947.25,1011.8181 C1964.5,1040.4321 1984.16,1073.0411 2002.43,1103.3431 " fill="none" id="Package-to-Transaction" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="2005.12,1107.7971,2003.8883,1098.0256,2002.5339,1103.5179,1997.0415,1102.1634,2005.12,1107.7971" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="154" x="1988.5" y="1074.02">gets saved on purchase</text><!--MD5=[4f0da4d77146c9bab82cccb171ddbb7b]
link DBUser to DBConnection--><path codeLine="261" d="M2543.59,229.9931 C2713.11,314.3331 2946.62,430.5031 3066.15,489.9731 " fill="none" id="DBUser-to-DBConnection" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="3070.71,492.2391,3064.4364,484.6469,3066.2342,490.0105,3060.8706,491.8083,3070.71,492.2391" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="30" x="2625.5" y="273.02">uses</text><!--MD5=[a992ca10dfc9e924550d1169ea1bfc03]
link DBUser to PasswordHasher--><path codeLine="269" d="M2342.5,229.9931 C2342.5,307.5831 2342.5,412.1231 2342.5,474.6611 " fill="none" id="DBUser-to-PasswordHasher" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="2342.5,479.8341,2346.5,470.8341,2342.5,474.8341,2338.5,470.8341,2342.5,479.8341" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="30" x="2343.5" y="273.02">uses</text><!--MD5=[466dcd6eaf461dbd9f524dec0cb99102]
link DBTransaction to DBConnection--><path codeLine="276" d="M2850.45,178.8131 C2917.28,258.5531 3048.49,415.0931 3110.08,488.5771 " fill="none" id="DBTransaction-to-DBConnection" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="3113.32,492.4411,3110.6181,482.9701,3110.1138,488.6045,3104.4794,488.1001,3113.32,492.4411" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="30" x="2928.5" y="273.02">uses</text><!--MD5=[09d84e976b12a45e6d95484096878df8]
link DBOffer to DBConnection--><path codeLine="286" d="M3143.5,191.7831 C3143.5,273.9131 3143.5,416.8031 3143.5,487.0471 " fill="none" id="DBOffer-to-DBConnection" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="3143.5,492.3871,3147.5,483.3871,3143.5,487.3871,3139.5,483.3871,3143.5,492.3871" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="30" x="3144.5" y="273.02">uses</text><!--MD5=[85a24b9669dafda1d560eac705118ade]
link DBCard to DBConnection--><path codeLine="302" d="M3461.05,229.9931 C3371.94,313.7531 3249.43,428.8931 3185.77,488.7301 " fill="none" id="DBCard-to-DBConnection" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="3182.03,492.2391,3191.3327,489.0048,3185.6788,488.8206,3185.863,483.1668,3182.03,492.2391" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="30" x="3418.5" y="273.02">uses</text><!--MD5=[13703c1836782e9c0f85ba4ff6f2409e]
link DBBattle to DBConnection--><path codeLine="310" d="M3936.37,178.4631 C3903.77,195.2231 3866.71,213.8331 3832.5,229.9531 C3620.97,329.6131 3367.61,436.1631 3234.88,491.0191 " fill="none" id="DBBattle-to-DBConnection" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="3230.21,492.9481,3240.0557,493.1984,3234.8292,491.0342,3236.9934,485.8077,3230.21,492.9481" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="30" x="3759.5" y="273.02">uses</text><!--MD5=[e2dc6bc4bc29a46cc4058f97bcf24900]
link ElementType to MonsterType--><!--MD5=[10389a2f7f6e48266b6c0d55d87b2a24]
link MonsterType to PackageType--><!--MD5=[1f4e98bfbcdb32650c6ebaf75f18f915]
link ElementType to Command--><!--MD5=[44f1a6abb31bb4ea7339eabfa8b6ce6f]
link Command to CLI--><!--MD5=[d7202df53b715696a8c7455a52487b07]
@startuml
title Monster Trading Card Game 

/' Enums '/
enum ElementType{
    Water
    Fire
    Normal
    Electric
    Ice 
    Ground
}

enum MonsterType{
    Goblin
    Dragon
    Wizzard 
    Ork 
    Knight
    Kraken
    Elf 
}

enum PackageType{
    Water
    Fire
    Normal
    Electric
    Ice 
    Ground
    Monster
    Spell
}

enum Command{
    Quit
    Register
    Login
    Logout
    Deck
    Battle
    Buy
    Trade
    Scores
    Profile
    Invalid
}

class CLI{
    + bool IsLoggedIn
    + IUser LoggedInUser
    + CLI();
    + Command GetUserCommand();
    + string ReadPassword();  
    + bool RegisterUser(); 
    + bool LoginUser(); 
    + void LogoutUser(); 
    + void Battle(); 
    + void Profile(); 
    + void GetPackage(); 
    + void Scores(); 
    + void Trade(); 
}

interface IUser{
}

class User{
    + int Id
    + string Username 
    + string Password
    + int Coins 
    + int Elo
    + int Wins
    + int Losses
    + CardStack CardStack
    + Deck Deck
    + void Challenge(IUser opponent);
    + void BuildDeck();
    + ICard ChooseRandomCard();
	+ void AddCardToStack(ICard card);
    + void AddCardToDeck(ICard card);
	+ void RemoveCardFromDeck(ICard card);
	+ void WinGame();
	+ void LoseGame();
	+ void Print();
	+ void BuyPackage(Package package);
	+ void OfferCard();
	+ void ManageOwnOffers();
	+ void FindOtherOffers();
	+ void ShowTransactions();
	+ void SendBattleRequest();
	+ bool HandleBattleRequests();
    + User(string username, string password);
    + User(int id, string username, string password, int coins, int elo, int wins, int losses);
    - Tuple<int, int, int> GetCardRequest();
    - int GetOfferPrice();
    - List<Offer> ListOffers(bool own);
    - Offer SelectOffer(List<Offer> offers);
}
IUser <|- - User

interface ICard{
}

abstract class Card{
    + int Id
    + int Damage
    + string Name 
    + ElementType ElementType
    + MonsterType MonsterType
    + int Level 
    + int Experience
    + void LevelUp(int exp); 
}
Card - -|> ICard

class Spell{
    + Spell(int id, string name, int damage, ElementType type, int level, int exp)
    + Spell(int id, string name, int damage, ElementType type)
    + void PrintCardNameInTable();
    + void PrintCardName(); 
    + void PrintWithDamage();
    + void PrintWithDamage(int damage);
}
Spell - -|> Card

class Monster{
    + Monster(int id, string name, int damage, ElementType eType, MonsterType mType, int level, int exp);
    + Monster(int id, string name, int damage, ElementType eType, MonsterType mType);
    + void PrintCardNameInTable();
    + void PrintCardName(); 
    + void PrintWithDamage();
    + void PrintWithDamage(int damage);
}
Monster - -|> Card

class Stack{
    + int Capacity
    + List<ICard> Cards
    + void AddCard();
    + void RemoveCard();
    + int Count();
    + bool IsEmpty();
    + CardStack()
    + void Print(); 
    + ICard GetHighestDamageCard(),
    + CardStack GenerateRandomSpell(int count);
    + CardStack GenerateRandomMonsters(int count); 
    + CardStack GenerateCardStack(); 
}
User - -> Stack : has

class Package{
    + int Capacity
    + List<ICard> Cards
    + void AddCard();
    + void RemoveCard();
    + int Count();
    + bool IsEmpty();
    + Package(PackageType type);
    + void Print(); 
    + void GeneratePackage(PackageType type); 
}
User - -> Package : buys

class Deck{
    + int Capacity
    + List<ICard> Cards
    + void AddCard();
    + void RemoveCard();
    + int Count();
    + bool IsEmpty();
    + Deck(); 
    + void Print(); 
    + Deck AutoCreateDeck(CardStack stack); 
}
User - -> Deck : uses

interface ICardCollection{
}
Stack - -|> ICardCollection
Package - -|> ICardCollection
Deck - -|> ICardCollection
ICardCollection "1" - -> "n" ICard : contains

class Battle{
    - IUser User1
    - IUser User2
    + Battle(User1, User2)
    + IUser StartBattle(); 
    + void Round(int round, ICard card1, ICard card2);
    + ICard MonsterBattle(ICard card1, ICard card2);
    + ICard SpellBattle(ICard card1, ICard card2);  
    + ICard MixedBattle(ICard card1, ICard card2);
    - ICard CalculateDamage(ICard card1, ICard card2, bool considerWeaknesses)
    - ResetDecks() 
}
Deck - -> Battle : is used in

class BattleRequest{
    + int Id
    + int User1
    + int User2
    + bool Completed
    + BattleRequest(int id, int user1, int user2, bool completed);
    + BattleRequest(int user1, int user2); 
}
User - -> BattleRequest : sends/accepts/denies

class Offer{
    + int Id
    + int UserId 
    + int CardId 
    + int Element
    + int Monster 
    + int MinDamage 
    + int Price 
    + Offer(int id, int user, int card, int element, int monster, int damage, int price); 
    + void PrintOwn();
    + void PrintOther(); 
}
User - -> Offer : makes/accepts

class Transaction{
    + int Id
    + int User1 
    + int User2 
    + int Card1
    + int Card2 
    + int Coins 
    + int Timestamp
    + Transaction(int id, int user1, int user2, int card1, int card2, int coins, int timestamp);
    + Transaction(int id, int user1, int user2, int card2, int coins, int timestamp); 
    + Transaction(int id, int user1, int coins, int timestamp); 
    + void PrintTransaction(); 
    + DateTime ConvertUnixTimeStampToDateTime(long unixTime);
}
Offer - -> Transaction : gets saved when accepted
Package - -> Transaction : gets saved on purchase

/' Database '/
class DBConnection{
    - string ConnString
    - NpgsqlConnect Connect();  
}

class DBUser{
    - PasswordHasher hasher
    - DBConnection dbConn
    + bool RegisterUser(IUser user); 
    + IUser LoginUser(string username, string password); 
    + string GetUsernameByUserId(int id); 
    + IUser GetUserObjectByUserId(int id); 
    + bool UpdateStats(IUser user); 
    + bool ChangePassword(int id, string oldPassword, string newPassword, string repeatPassword); 
    + bool BuyPackage(Package package, IUser user); 
    + List<IUser> GetAllUsers(); 
    + int GetCoinsByUserId(int id); 
    + bool TransferCoins(IUser sender, int receiver, int coins); 
}
DBUser - -> DBConnection : uses

class PasswordHasher{
    + string Hash(string password, int iterations); 
    + string Hash(string password); 
    + bool IsHashSupported(string hashString); 
    + bool Verify(string password, string hashedPassword); 
}
DBUser - -> PasswordHasher : uses
class DBTransaction{
    - DBConnection dbConn
    + bool NewTransaction(Transaction transaction);
    + List<Transaction> GetTransactionsByUserId(int id);
    + long GetSpentCoinsByUserId(int id);
}
DBTransaction - -> DBConnection : uses

class DBOffer{
    - DBConnection dbConn
    + bool CreateNewOffer(Offer offer);
    + List<Offer> GetOffersByUserId(int id); 
    + List<Offer> GetOffersFromOtherUsers(int id); 
    + bool RemoveOfferByOfferId(int id); 
    + bool UpdateOffer(int offerId, Offer newOffer); 
}
DBOffer - -> DBConnection : uses

class DBCard{
    - DBConnection dbConn
    + CardStack GetCardStackFromUserId(int userId);
    + Deck GetDeckFromUserId(int userId); 
    + CardStack GetAllCardsFromUserId(int userId); 
    + int GetCardOwner(int cardId); 
    + ICard GetCardByCardId(int cardId); 
    + bool UpdateDeck(int userId, Deck deck); 
    + bool AddPackageToCards(Package package, int userId);
    + CardStack GetMatchingCards(int userId, int element, int monster, int minDamage); 
    + bool SwitchOwners(ICard card1, ICard card2); 
    + bool SwitchOwnerAgainstCoins(IUser newOwner, ICard card); 
    + bool UpdateCardLevel(ICard card); 
}
DBCard - -> DBConnection : uses

class DBBattle{
    - DBConnection dbConn
    + bool CreateBattleRequest(BattleRequest req);
    + List<BattleRequest> GetAllOpenRequestsByUserId(int id); 
    + bool RemoveBattleRequestById(int id); 
}
DBBattle - -> DBConnection : uses
@enduml

@startuml
title Monster Trading Card Game 

enum ElementType{
    Water
    Fire
    Normal
    Electric
    Ice 
    Ground
}

enum MonsterType{
    Goblin
    Dragon
    Wizzard 
    Ork 
    Knight
    Kraken
    Elf 
}

enum PackageType{
    Water
    Fire
    Normal
    Electric
    Ice 
    Ground
    Monster
    Spell
}

enum Command{
    Quit
    Register
    Login
    Logout
    Deck
    Battle
    Buy
    Trade
    Scores
    Profile
    Invalid
}

class CLI{
    + bool IsLoggedIn
    + IUser LoggedInUser
    + CLI();
    + Command GetUserCommand();
    + string ReadPassword();  
    + bool RegisterUser(); 
    + bool LoginUser(); 
    + void LogoutUser(); 
    + void Battle(); 
    + void Profile(); 
    + void GetPackage(); 
    + void Scores(); 
    + void Trade(); 
}

interface IUser{
}

class User{
    + int Id
    + string Username 
    + string Password
    + int Coins 
    + int Elo
    + int Wins
    + int Losses
    + CardStack CardStack
    + Deck Deck
    + void Challenge(IUser opponent);
    + void BuildDeck();
    + ICard ChooseRandomCard();
	+ void AddCardToStack(ICard card);
    + void AddCardToDeck(ICard card);
	+ void RemoveCardFromDeck(ICard card);
	+ void WinGame();
	+ void LoseGame();
	+ void Print();
	+ void BuyPackage(Package package);
	+ void OfferCard();
	+ void ManageOwnOffers();
	+ void FindOtherOffers();
	+ void ShowTransactions();
	+ void SendBattleRequest();
	+ bool HandleBattleRequests();
    + User(string username, string password);
    + User(int id, string username, string password, int coins, int elo, int wins, int losses);
    - Tuple<int, int, int> GetCardRequest();
    - int GetOfferPrice();
    - List<Offer> ListOffers(bool own);
    - Offer SelectOffer(List<Offer> offers);
}
IUser <|- - User

interface ICard{
}

abstract class Card{
    + int Id
    + int Damage
    + string Name 
    + ElementType ElementType
    + MonsterType MonsterType
    + int Level 
    + int Experience
    + void LevelUp(int exp); 
}
Card - -|> ICard

class Spell{
    + Spell(int id, string name, int damage, ElementType type, int level, int exp)
    + Spell(int id, string name, int damage, ElementType type)
    + void PrintCardNameInTable();
    + void PrintCardName(); 
    + void PrintWithDamage();
    + void PrintWithDamage(int damage);
}
Spell - -|> Card

class Monster{
    + Monster(int id, string name, int damage, ElementType eType, MonsterType mType, int level, int exp);
    + Monster(int id, string name, int damage, ElementType eType, MonsterType mType);
    + void PrintCardNameInTable();
    + void PrintCardName(); 
    + void PrintWithDamage();
    + void PrintWithDamage(int damage);
}
Monster - -|> Card

class Stack{
    + int Capacity
    + List<ICard> Cards
    + void AddCard();
    + void RemoveCard();
    + int Count();
    + bool IsEmpty();
    + CardStack()
    + void Print(); 
    + ICard GetHighestDamageCard(),
    + CardStack GenerateRandomSpell(int count);
    + CardStack GenerateRandomMonsters(int count); 
    + CardStack GenerateCardStack(); 
}
User - -> Stack : has

class Package{
    + int Capacity
    + List<ICard> Cards
    + void AddCard();
    + void RemoveCard();
    + int Count();
    + bool IsEmpty();
    + Package(PackageType type);
    + void Print(); 
    + void GeneratePackage(PackageType type); 
}
User - -> Package : buys

class Deck{
    + int Capacity
    + List<ICard> Cards
    + void AddCard();
    + void RemoveCard();
    + int Count();
    + bool IsEmpty();
    + Deck(); 
    + void Print(); 
    + Deck AutoCreateDeck(CardStack stack); 
}
User - -> Deck : uses

interface ICardCollection{
}
Stack - -|> ICardCollection
Package - -|> ICardCollection
Deck - -|> ICardCollection
ICardCollection "1" - -> "n" ICard : contains

class Battle{
    - IUser User1
    - IUser User2
    + Battle(User1, User2)
    + IUser StartBattle(); 
    + void Round(int round, ICard card1, ICard card2);
    + ICard MonsterBattle(ICard card1, ICard card2);
    + ICard SpellBattle(ICard card1, ICard card2);  
    + ICard MixedBattle(ICard card1, ICard card2);
    - ICard CalculateDamage(ICard card1, ICard card2, bool considerWeaknesses)
    - ResetDecks() 
}
Deck - -> Battle : is used in

class BattleRequest{
    + int Id
    + int User1
    + int User2
    + bool Completed
    + BattleRequest(int id, int user1, int user2, bool completed);
    + BattleRequest(int user1, int user2); 
}
User - -> BattleRequest : sends/accepts/denies

class Offer{
    + int Id
    + int UserId 
    + int CardId 
    + int Element
    + int Monster 
    + int MinDamage 
    + int Price 
    + Offer(int id, int user, int card, int element, int monster, int damage, int price); 
    + void PrintOwn();
    + void PrintOther(); 
}
User - -> Offer : makes/accepts

class Transaction{
    + int Id
    + int User1 
    + int User2 
    + int Card1
    + int Card2 
    + int Coins 
    + int Timestamp
    + Transaction(int id, int user1, int user2, int card1, int card2, int coins, int timestamp);
    + Transaction(int id, int user1, int user2, int card2, int coins, int timestamp); 
    + Transaction(int id, int user1, int coins, int timestamp); 
    + void PrintTransaction(); 
    + DateTime ConvertUnixTimeStampToDateTime(long unixTime);
}
Offer - -> Transaction : gets saved when accepted
Package - -> Transaction : gets saved on purchase

class DBConnection{
    - string ConnString
    - NpgsqlConnect Connect();  
}

class DBUser{
    - PasswordHasher hasher
    - DBConnection dbConn
    + bool RegisterUser(IUser user); 
    + IUser LoginUser(string username, string password); 
    + string GetUsernameByUserId(int id); 
    + IUser GetUserObjectByUserId(int id); 
    + bool UpdateStats(IUser user); 
    + bool ChangePassword(int id, string oldPassword, string newPassword, string repeatPassword); 
    + bool BuyPackage(Package package, IUser user); 
    + List<IUser> GetAllUsers(); 
    + int GetCoinsByUserId(int id); 
    + bool TransferCoins(IUser sender, int receiver, int coins); 
}
DBUser - -> DBConnection : uses

class PasswordHasher{
    + string Hash(string password, int iterations); 
    + string Hash(string password); 
    + bool IsHashSupported(string hashString); 
    + bool Verify(string password, string hashedPassword); 
}
DBUser - -> PasswordHasher : uses
class DBTransaction{
    - DBConnection dbConn
    + bool NewTransaction(Transaction transaction);
    + List<Transaction> GetTransactionsByUserId(int id);
    + long GetSpentCoinsByUserId(int id);
}
DBTransaction - -> DBConnection : uses

class DBOffer{
    - DBConnection dbConn
    + bool CreateNewOffer(Offer offer);
    + List<Offer> GetOffersByUserId(int id); 
    + List<Offer> GetOffersFromOtherUsers(int id); 
    + bool RemoveOfferByOfferId(int id); 
    + bool UpdateOffer(int offerId, Offer newOffer); 
}
DBOffer - -> DBConnection : uses

class DBCard{
    - DBConnection dbConn
    + CardStack GetCardStackFromUserId(int userId);
    + Deck GetDeckFromUserId(int userId); 
    + CardStack GetAllCardsFromUserId(int userId); 
    + int GetCardOwner(int cardId); 
    + ICard GetCardByCardId(int cardId); 
    + bool UpdateDeck(int userId, Deck deck); 
    + bool AddPackageToCards(Package package, int userId);
    + CardStack GetMatchingCards(int userId, int element, int monster, int minDamage); 
    + bool SwitchOwners(ICard card1, ICard card2); 
    + bool SwitchOwnerAgainstCoins(IUser newOwner, ICard card); 
    + bool UpdateCardLevel(ICard card); 
}
DBCard - -> DBConnection : uses

class DBBattle{
    - DBConnection dbConn
    + bool CreateBattleRequest(BattleRequest req);
    + List<BattleRequest> GetAllOpenRequestsByUserId(int id); 
    + bool RemoveBattleRequestById(int id); 
}
DBBattle - -> DBConnection : uses
@enduml

PlantUML version 1.2021.17beta9(Unknown compile time)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>